{"version":3,"sources":["components/SideDrawer/DrawerToggleButton.js","components/Toolbar/Toolbar.js","components/SideDrawer/SideDrawer.js","components/Backdrop/BackDrop.js","components/Button/Button.js","components/Input/Input.js","components/Banner/Banner.js","Context.js","components/Popups/Popup.js","components/Options/Options.js","components/Mobile/Mobile.js","Dummy.js","components/Popups/Notification.js","components/Mobile/GetDiv.js","components/Mobile/GetCheckList.js","App.js","index.js"],"names":["DrawerToggleButton","props","className","onClick","click","Toolbar","drawerClickHandler","href","SideDrawer","drawerClasses","show","BackDrop","STYLES","SIZES","Button","children","type","buttonStyle","buttonSize","id","checkButtonStyle","includes","checkButtonSize","Input","name","placeholder","onChange","value","label","error","Fragment","htmlFor","defaultProps","Banner","title","subtitle","ProductContext","Component","React","createContext","temp","InformationProvider","timeout","connect","connectInterval","ws","WebSocket","IP_ADDRESS_PG","that","onopen","console","log","setState","prevState","flag","send","clearTimeout","onclose","e","Math","min","reason","setTimeout","check","onerror","err","message","close","onmessage","evt","JSON","parse","data","exp_logs","logs","getExperimentsButton","addMessage","msg","output","document","getElementById","innerHTML","getFullScreenElementZIndex","i","length","showcontent","c","target","style","background","border","zIndex","t_contentpretty","syntaxHighlight","getAttribute","replace","hidecontent","json","match","cls","test","state","readyState","CLOSED","qaLogs","event","ele","clicked","uriComponent","getRequest","elementTypeFilter","et","alldiv","getElementsByClassName","a","checked","display","startRecord","recordName","getRecordName","playRunButton","playRun","rn","prompt","rc","window","confirm","undefined","alert","inputBtn","sendMessage","getAppiumStatus","url","reqType","xmlHttp","XMLHttpRequest","uriComponentString","query","Object","keys","and_operator","forEach","key","encodeURIComponent","open","responseText","input","stopRecord","zindexChanged","startAppium","ret","appium_status","gameCommandList","response","jsonList","gameCommandHTML","buttonCount","get_magic_logs","gameCommandList_list","isShown","executeGameCommand","params","updateExperiment","exp","uri","clearoutput","getExperiments","refreshPage","location","reload","inputItems1","inputItems2","FTUE_Z_ORDER","zindexChoice","elementType","elementTypeButton","contentpretty","promptMessage","promptCalled","bind","this","Provider","ProductConsumer","Consumer","Options","cashUpdate","puzCompleted","clearOutput","handleChange","handler","defaultChecked","qaLogsButton","v","screen","class","xPos","yPos","preY","visible","anchorX","anchorY","scale","x","y","element","spriteName","boundbox","width","height","zindex","layerType","GetDiv","showContent","hideContent","push","onMouseOver","onMouseOut","stringify","datatype","position","left","top","items","k","exp_name","selected","marginTop","marginBottom","fontSize","map","va","GetCheckList","App","sideDrawerOpen","setModalShow","backdropClickHandler","drawerToggleClickHandler","handle","handleclick","trigger","foo","qa_logs","backdrop","margin","alignItems","textAlign","textDecoration","textTransform","marginLeft","opacity","zoom","overflow","val","ReactDOM","render"],"mappings":"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","file":"js/main.6876058e.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./DrawerToggleButton.css\"\nconst DrawerToggleButton = (props) => (\n  <button className=\"toogle-button\" onClick={props.click}>\n    <div className=\"toggle-button_line\" />\n    <div className=\"toggle-button_line\" />\n    <div className=\"toggle-button_line\" />\n  </button>\n)\n\nexport default DrawerToggleButton\n","import React from \"react\"\nimport \"./Toolbar.css\"\nimport DrawerToggleButton from \"../SideDrawer/DrawerToggleButton\"\nconst Toolbar = (props) => (\n  <header className=\"toolbar\">\n    <nav className=\"toolbar_navigation\">\n      <div>\n        <DrawerToggleButton click={props.drawerClickHandler} />\n      </div>\n      <div className=\"toolbar_logo\">\n        <a href=\"/\">The LOGO</a>\n      </div>\n      <div className=\"space\" />\n      <div className=\"toolbar_navigation_items\">\n        <ul>\n          <li>\n            <a href=\"/\">Products</a>\n          </li>\n          <li>\n            <a href=\"/\">Users</a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  </header>\n)\n\nexport default Toolbar\n","import React from \"react\"\nimport \"./SideDrawer.css\"\nconst SideDrawer = (props) => {\n  let drawerClasses = 'side-drawer'\n  if(props.show){\n    drawerClasses = 'side-drawer open'\n  }\n  return (\n    <nav className={drawerClasses}>\n      <ul>\n        <li>\n          <a href=\"/\">Products</a>\n        </li>\n        <li>\n          <a href=\"/\">User</a>\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default SideDrawer\n","import React from \"react\"\nimport \"./BackDrop.css\"\nconst BackDrop = (props) => <div className=\"backdrop\" onClick={props.click} />\n\nexport default BackDrop\n","import React from \"react\"\nimport \"./Button.css\"\n\nconst STYLES = [\n  \"btn--primary--solid\",\n  \"btn--warning--solid\",\n  \"btn--danger--solid\",\n  \"btn--success--solid\",\n  \"btn--primary--outline\",\n  \"btn--warning--outline\",\n  \"btn--danger--outline\",\n  \"btn--success--outline\",\n  \"btn--black--border\"\n]\n\nconst SIZES = [\"btn--medium\", \"btn--large\"]\n\nconst Button = ({ children, type, onClick, buttonStyle, buttonSize, id }) => {\n  const checkButtonStyle = STYLES.includes(buttonStyle)\n    ? buttonStyle\n    : STYLES[0]\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\n  return (\n    <button\n      className={`btn ${checkButtonStyle} ${checkButtonSize}`}\n      onClick={onClick}\n      id={id}\n      type={type}\n    >\n      {children}\n    </button>\n  )\n}\n\nexport default Button\n","import React from \"react\"\nimport \"./Input.css\"\n\nconst Input = ({\n  name,\n  type,\n  placeholder,\n  onChange,\n  className,\n  value,\n  error,\n  children,\n  label,\n  ...props\n}) => {\n  return (\n    <React.Fragment>\n      <label htmlFor={name}>{label}</label>\n      <input\n        id={name}\n        name={name}\n        type={type}\n        placeholder={placeholder}\n        onChange={onChange}\n        value={value}\n        className={className}\n      />\n    </React.Fragment>\n  )\n}\n\nInput.defaultProps = {\n  type: \"text\",\n  className: \"\",\n  value: \"\"\n}\n\nexport default Input\n","import React from \"react\"\nimport \"./Banner.css\"\nexport default function Banner({ children, title, subtitle }) {\n  return (\n    <div className=\"banner\">\n      <h1>{title}</h1>\n      <p>{subtitle}</p>\n      {children}\n    </div>\n  )\n}\n","import React, { Component } from \"react\"\nimport Banner from \"./components/Banner/Banner\"\nimport ModalComponent from \"./components/Popups/Popup\"\nconst ProductContext = React.createContext()\n\nconst IP_ADDRESS_PG = \"ws://192.168.0.103:\"\nconst PORT = 7681\nconst URL = IP_ADDRESS_PG + PORT\nvar qaLogsButton = 1\nvar temp = 0\nvar callerFunction = \"\"\n\nclass InformationProvider extends Component {\n  constructor() {\n    super()\n    this.state = {\n      ws: null,\n      flag: false,\n      recordName: \"\",\n      inputItems1: \"\",\n      inputItems2: \"\",\n      FTUE_Z_ORDER: 75,\n      appium_status: \"Check Appium Connection\",\n      zindexChoice: 1,\n      elementType: [],\n      elementTypeButton: [],\n      getExperimentsButton: 0,\n      logs: [],\n      exp_logs: [],\n      contentpretty: {},\n      gameCommandList_list: {},\n      isShown: false,\n      promptMessage: \"\",\n      promptCalled: false\n    }\n    this.showcontent = this.showcontent.bind(this)\n    this.hidecontent = this.hidecontent.bind(this)\n  }\n\n  componentDidMount() {\n    this.connect()\n  }\n  timeout = 250\n\n  connect = () => {\n    var ws = new WebSocket(URL)\n    let that = this // cache the this\n    var connectInterval\n    ws.onopen = () => {\n      console.log(\"connected websocket main component\")\n      this.setState((prevState) => ({\n        ...prevState,\n        ws: ws,\n        flag: true\n      }))\n\n      ws.send('{\"command\":\"qaLogs\"}')\n      that.timeout = 250 // reset timer to 250 on open of websocket connection\n      clearTimeout(connectInterval) // clear Interval on on open of websocket connection\n    }\n\n    ws.onclose = (e) => {\n      console.log(\n        `Socket is closed. Reconnect will be attempted in ${Math.min(\n          10000 / 1000,\n          (that.timeout + that.timeout) / 1000\n        )} second.`,\n        e.reason\n      )\n      this.setState((prevState) => ({\n        ...prevState,\n        flag: false\n      }))\n\n      that.timeout = that.timeout + that.timeout //increment retry interval\n      connectInterval = setTimeout(this.check, Math.min(10000, that.timeout)) //call check function after timeout\n    }\n\n    ws.onerror = (err) => {\n      console.error(\"Socket encountered error: \", err.message, \"Closing socket\")\n      this.setState((prevState) => ({\n        ...prevState,\n        flag: false\n      }))\n      ws.close()\n    }\n\n    ws.onmessage = (evt) => {\n      var log = JSON.parse(evt.data)\n      console.log(\"Onmessgae\")\n      if (temp == 1) {\n        log = JSON.parse(evt.data)[\"arr\"]\n      }\n      if (temp) {\n        this.setState((prevState) => ({\n          ...prevState,\n          exp_logs: log,\n          logs: log,\n          getExperimentsButton: 1\n        }))\n      } else {\n        this.setState((prevState) => ({\n          ...prevState,\n          exp_logs: log,\n          logs: log,\n          getExperimentsButton: 0\n        }))\n      }\n      temp = 0\n    }\n  }\n\n  // TODO make prompt\n  addMessage = (msg) => {\n    var output = document.getElementById(\"output\")\n    console.log(msg)\n    output.innerHTML += msg + \"<br/>\"\n  }\n\n  getFullScreenElementZIndex = (log) => {\n    console.log(\"get Full screen ElementZindex is called\")\n    for (var i = 0; i < log.length; i++) {\n      if (log[i][\"boundbox\"][\"height\"] >= 1920) {\n        return log[i][\"zindex\"]\n      }\n    }\n  }\n\n  // TODO Make some display arrangement\n  showcontent = (c) => {\n    console.log(\"showContent is called\")\n    console.log(c.target)\n    c.target.style.background = \"lightgrey\"\n    c.target.style.border = \"dotted 1px Blue\"\n    c.target.style.zIndex = -2\n    var t_contentpretty = this.syntaxHighlight(\n      c.target.getAttribute(\"value\").replace(\"/'/g\", '\"')\n    )\n    document.getElementById(\"idname\").innerHTML = t_contentpretty\n  }\n\n  // TODO make some arrangement\n  hidecontent = (c) => {\n    console.log(\"hidecontent is called\")\n    c.target.style.background = null\n    c.target.style.border = \"solid 1px grey\"\n    document.getElementById(\"idname\").innerHTML = \"\"\n  }\n\n  syntaxHighlight = (json) => {\n    console.log(\"syntaxHighlight is called\")\n    json = json\n      .replace(/&/g, \"&amp;\")\n      .replace(/</g, \"&lt;\")\n      .replace(/>/g, \"&gt;\")\n    return json.replace(\n      /(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g,\n      function (match) {\n        var cls = \"number\"\n        if (/^\"/.test(match)) {\n          if (/:$/.test(match)) {\n            cls = \"key\"\n          } else {\n            cls = \"string\"\n          }\n        } else if (/true|false/.test(match)) {\n          cls = \"boolean\"\n        } else if (/null/.test(match)) {\n          cls = \"null\"\n        }\n        return '<span class=\"' + cls + '\">' + match + \"</span>\"\n      }\n    )\n  }\n\n  check = () => {\n    const { ws } = this.state.ws\n    if (!ws || ws.readyState === WebSocket.CLOSED) this.connect() //check if websocket instance is closed, if so call `connect` function.\n  }\n\n  getFullScreenElementZIndex = (log) => {\n    for (var i = 0; i < log.length; i++) {\n      if (log[i][\"boundbox\"][\"height\"] >= 1920) {\n        return log[i][\"zindex\"]\n      }\n    }\n  }\n\n  qaLogs = (event) => {\n    if (this.state.flag) {\n      this.state.ws.send('{\"command\":\"qaLogs\"}')\n    } else {\n      this.setState((prevState) => ({\n        ...prevState,\n        flag: false\n      }))\n    }\n  }\n\n  click = (ele) => {\n    console.log(\"click is called\")\n    console.log(ele.getAttribute(\"name\"))\n  }\n\n  clicked = (ele) => {\n    console.log(\"clicked ghgh\")\n    console.log(ele.target)\n    var url = \"action/tap_sprite\"\n    var uriComponent = { name: ele.target.getAttribute(\"name\") }\n    this.getRequest(url, uriComponent, true)\n    this.qaLogs()\n  }\n\n  get_magic_logs() {\n    console.log(\"magic Logs\")\n    var url = \"action/get_magic_logs\"\n    var ret = this.getRequest(url, undefined, false)\n  }\n\n  elementTypeFilter = (et) => {\n    console.log(\"elemntTypeFilter\")\n    var value = et.target.value\n    var alldiv = document.getElementsByClassName(\"elements\")\n    for (var a = 0; a < alldiv.length; a++) {\n      if (et.target.checked) {\n        if (alldiv[a].getAttribute(\"datatype\") === value) {\n          alldiv[a].style.display = \"block\"\n        }\n      } else {\n        if (alldiv[a].getAttribute(\"datatype\") === value) {\n          alldiv[a].style.display = \"none\"\n        }\n      }\n    }\n  }\n\n  startRecord = (evt) => {\n    console.log(\"Start Record button is clicked\")\n    // this.setState((prevState) => ({\n    //   ...prevState,\n    //   recordName: this.getRecordName()\n    // }))\n\n    var recordName = this.getRecordName()\n\n    if (recordName != \"\") {\n      console.log(\"started recording \" + recordName)\n    }\n    // this.addMessage(\"Started Recordin with run name : \" + this.state.recordName)\n\n    this.state.ws.send('{\"command\":\"recordStart\"}')\n    // use this to start record from cocos code\n  }\n\n  playRunButton = (evt) => {\n    console.log(\"PlayRun button is called\")\n    var runName = this.playRun()\n  }\n\n  playRun = () => {\n    console.log(\"Playrun is called\")\n    var startRun = \"\"\n    let rn = prompt(\"Enter run name to starting playing:\")\n    let rc = window.confirm(\"Confirm run name :\" + rn)\n    console.log(rn, rc)\n    if (rc == true && rn != \"\" && rn != undefined && rn != null) {\n      startRun = this.getRequest(\"action/play_run\", { name: rn }, false)\n      return rn\n    } else {\n      alert(\"Error in Appium Connection Please restart Appium.\")\n    }\n  }\n\n  inputBtn = (evt) => {\n    console.log(\"send message is called\")\n    this.sendMessage()\n  }\n\n  getRecordName = () => {\n    var startRun = \"\"\n    console.log(\"get RecorName is called\")\n    if (this.getAppiumStatus()) {\n      let recordName = prompt(\"start Recording...Enter name for this run:\")\n      let confirmName = window.confirm(\"confirm record name :\" + recordName)\n      if (\n        confirmName &&\n        recordName != \"\" &&\n        recordName != undefined &&\n        recordName != null\n      ) {\n        startRun = this.getRequest(\n          \"action/start_record\",\n          { name: recordName },\n          true\n        )\n        return recordName\n      }\n    } else {\n      alert(\"Error in Appium connection. Please restart Appium.\")\n    }\n  }\n\n  getRequest = (url, uriComponent, reqType) => {\n    console.log(\"Get request is called\")\n    var xmlHttp = new XMLHttpRequest()\n    console.log(xmlHttp)\n    var uriComponentString = \"\"\n    var query = \"\"\n    if (uriComponent != undefined) {\n      if (Object.keys(uriComponent).length > 0) {\n        query = \"?\"\n      }\n\n      var and_operator = false\n      Object.keys(uriComponent).forEach(function (key) {\n        console.log(key + \" \" + uriComponent[key])\n        if (!and_operator) {\n          uriComponentString +=\n            key + \"=\" + encodeURIComponent('\"' + uriComponent[key] + '\"')\n          and_operator = true\n        } else {\n          uriComponentString +=\n            \"&\" + key + \"=\" + encodeURIComponent('\"' + uriComponent[key] + '\"')\n        }\n      })\n      xmlHttp.open(\"GET\", url + query + uriComponentString, reqType) // false for synchronous request\n    } else {\n      xmlHttp.open(\"GET\", url + query + uriComponentString, reqType) // false for synchronous request\n    }\n    console.log(\"Send\")\n    xmlHttp.send()\n    console.log(\"send\")\n    return xmlHttp.responseText\n  }\n\n  sendMessage = () => {\n    console.log(\"send message is called\")\n    console.log(this.state.input)\n    this.state.ws.send(this.state.input)\n    this.setState((prevState) => ({\n      ...prevState,\n      input: \"\"\n    }))\n  }\n\n  playRunButton = () => {\n    console.log(\"playRun Button is called\")\n    var rn = this.playRun()\n    this.addMessage(`starting play run name : $rn`)\n  }\n\n  stopRecord = () => {\n    console.log(\"stop record is called\")\n    this.state.ws.send('{\"command\":\"recordStop\"}')\n  }\n\n  zindexChanged = (ele) => {\n    console.log(\"Zindexchnaged is called\")\n    this.qaLogs()\n  }\n\n  startAppium = () => {\n    console.log(\"start Appium is called\")\n    var url = \"start_appium\"\n    var ret = this.getRequest(url, undefined, false)\n    this.setState((prevState) => ({\n      ...prevState,\n      appium_status: \"Appium Connected\"\n    }))\n    return ret\n  }\n\n  getAppiumStatus = () => {\n    console.log(\"Get appium status is called\")\n    var url = \"get_appium_status\"\n    var ret = this.getRequest(url, undefined, false)\n    console.log(ret)\n    if (ret == \"true\") {\n      this.setState((prevState) => ({\n        ...prevState,\n        appium_status: \"Appium Connected\"\n      }))\n    } else {\n      this.setState((prevState) => ({\n        ...prevState,\n        appium_status: \"Start Appium\"\n      }))\n    }\n    return ret\n  }\n\n  gameCommandList = (evt) => {\n    console.log(\"Game command list is called\")\n    var url = \"action/get_command_list\"\n    var response = this.getRequest(url, undefined, false)\n    var jsonList = JSON.parse(JSON.parse(response))\n    var gameCommandHTML = \"\"\n    var buttonCount = 0\n    Object.keys(jsonList).forEach(function (key) {\n      buttonCount += 1\n      gameCommandHTML +=\n        \"<button onclick='executeGameCommand(this)' id=\" +\n        key +\n        \" type='button'>\" +\n        key +\n        \"</button>\"\n    })\n    if (buttonCount == 0) {\n      this.get_magic_logs()\n    }\n    this.setState((prevState) => ({\n      ...prevState,\n      gameCommandList_list: jsonList,\n      isShown: true\n    }))\n    return gameCommandHTML\n  }\n\n  executeGameCommand = (ele) => {\n    console.log(\"execute game command is called\")\n    var name = ele.target.id\n    var url = \"action/\" + name\n    var uri = undefined\n    let params = prompt(\"Enter url params for this command\")\n    if (params == undefined || params == \"\") {\n      this.getRequest(url, uri, true)\n    } else {\n      this.getRequest(url + \"?\" + params, undefined, true)\n    }\n    this.qaLogs()\n  }\n\n  updateExperiment = (exp) => {\n    console.log(\"Update experiment is called\")\n    var name = exp.target.id\n    if (this.getAppiumStatus()) {\n      var url = \"action/update_experiment\"\n      var uri = { name: name, value: exp.target.value }\n      this.getRequest(url, uri, false)\n    } else {\n      alert(\"Please Connect Appium !\")\n    }\n  }\n\n  clearoutput = () => {\n    console.log(\"clear log is called\")\n    this.setState((prevState) => ({\n      ...prevState,\n      gameCommandList_list: {},\n      logs: []\n    }))\n  }\n\n  getExperiments = () => {\n    console.log(\"get Experiment is called\")\n    temp = 1\n    this.state.ws.send('{\"command\":\"experiments\"}')\n  }\n\n  refreshPage = () => {\n    window.location.reload()\n  }\n\n  render() {\n    if (!this.state.flag) {\n      return (\n        <Banner\n          title=\"Please Check Your Web Socket Connection\"\n          subtitle=\"Kindly run the Game on the top of the screen\"\n        >\n          <button type=\"submit\" onClick={this.refreshPage}>\n            Refresh Button\n          </button>\n        </Banner>\n      )\n    }\n\n    return (\n      <>\n        <ProductContext.Provider\n          value={{\n            exp_logs: this.state.exp_logs,\n            value: this.state.logs,\n            flag: this.state.flag,\n            FTUE_Z_ORDER: this.state.FTUE_Z_ORDER,\n            zindexChoice: this.state.zindexChoice,\n            appium_status: this.state.appium_status,\n            elementType: [],\n            getExperimentsButton: this.state.getExperimentsButton,\n            qaLogs: this.qaLogs,\n            clicked: this.clicked,\n            showcontent: this.showcontent,\n            hidecontent: this.hidecontent,\n            elementTypeFilter: this.elementTypeFilter,\n            clearoutput: this.clearoutput,\n            getExperiments: this.getExperiments,\n            getAppiumStatus: this.getAppiumStatus,\n            startAppium: this.startAppium,\n            gameCommandList: this.gameCommandList,\n            startRecord: this.startRecord,\n            stopRecord: this.stopRecord,\n            playRunButton: this.playRunButton,\n            updateExperiment: this.updateExperiment,\n            contentpretty: this.state.contentpretty,\n            gameCommandList_list: this.state.gameCommandList_list,\n            executeGameCommand: this.executeGameCommand,\n            isShown: this.state.isShown,\n            zindexChanged: this.zindexChanged\n          }}\n        >\n          {this.props.children}\n        </ProductContext.Provider>\n      </>\n    )\n  }\n}\n\nconst ProductConsumer = ProductContext.Consumer\nexport { InformationProvider, ProductConsumer }\n\nexport default ProductContext\n// export { UserProvider, UserConsumer }\n","import React, { Component } from \"react\"\nimport { Modal, Button, Row, Col, Form } from \"react-bootstrap\"\n\nexport class ModalComponent extends Component {\n  constructor(props) {\n    super(props)\n  }\n  render() {\n    // console.log(this.props.onHide)\n    return (\n      <Modal\n        {...this.props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Message from the server!!!\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={this.props.handleSubmitStartRun}>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>\n                <h3>{this.props.promptMessage}</h3>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder={this.props.promptMessage}\n                name=\"inputItems1\"\n                onChange={this.props.handleChange}\n              />\n              <Form.Text className=\"text-muted\">\n                Please provide proper format for the input\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>\n                <h3>Confirm</h3>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Confirm\"\n                name=\"inputItems2\"\n                onChange={this.props.handleChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicCheckbox\"></Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button type=\"submit\" onClick={this.props.handleSubmitStartRun}>\n            Submit\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n}\n\n\n\nexport default ModalComponent\n","import React, { Component } from \"react\"\nimport Button from \"../Button/Button\"\nimport Input from \"../Input/Input\"\nimport \"./Options.css\"\nimport { ProductConsumer } from \"../../Context\"\n\nclass Options extends Component {\n  state = {\n    cashUpdate: \"\",\n    puzCompleted: \"\"\n  }\n  qaLogs = () => console.log(\"qaLogs\")\n  clearOutput = () => console.log(\"Clear\")\n  getExperiments = () => console.log(\"getExperiments\")\n  getAppiumStatus = () => console.log(\"Appium status\")\n  gameCommandList = () => console.log(\"Game command list\")\n\n  handleChange = (event) => {\n    console.log(event.target.name)\n    console.log(this.state.cashUpdate)\n    console.log(this.state.puzCompleted)\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  render() {\n    const {\n      qaLogs,\n      clearoutput,\n      getExperiments,\n      getAppiumStatus,\n      gameCommandList,\n      startRecord,\n      stopRecord,\n      playRunButton,\n      appium_status,\n      startAppium,\n      zindexChanged\n    } = this.props\n    var handler = \"\"\n    if (appium_status === \"Check Appium Connection\") {\n      handler = getAppiumStatus\n    } else {\n      handler = startAppium\n    }\n    return (\n      <nav className=\"options\">\n        <Button\n          onClick={qaLogs}\n          id=\"qaLogs\"\n          type=\"button\"\n          buttonSize=\"btn--medium\"\n          buttonStyle=\"btn--danger--outline\"\n        >\n          qaLogs\n        </Button>\n        <Button\n          onClick={clearoutput}\n          id=\"clear\"\n          type=\"button\"\n          buttonSize=\"btn--medium\"\n          buttonStyle=\"btn--danger--outline\"\n        >\n          Clear\n        </Button>\n        <Button\n          onClick={getExperiments}\n          id=\"getExperiments\"\n          type=\"button\"\n          buttonSize=\"btn--medium\"\n          buttonStyle=\"btn--danger--outline\"\n        >\n          Experiments\n        </Button>\n\n        <Button\n          onClick={handler}\n          id=\"getAppiumStatus\"\n          type=\"button\"\n          buttonSize=\"btn--medium\"\n          buttonStyle=\"btn--danger--outline\"\n        >\n          {appium_status}\n        </Button>\n\n        <Button\n          onClick={gameCommandList}\n          id=\"gameCommandList\"\n          type=\"button\"\n          buttonSize=\"btn--medium\"\n          buttonStyle=\"btn--danger--outline\"\n        >\n          Game commands\n        </Button>\n\n        <h1>Server Responses</h1>\n\n        {/* Server Response */}\n        <Button\n          onClick={startRecord}\n          type=\"button\"\n          name=\"startRecord\"\n          id=\"startRecord\"\n          buttonSize=\"btn--medium\"\n          buttonStyle=\"btn--danger--outline\"\n        >\n          Start Record\n        </Button>\n        <Button\n          onClick={stopRecord}\n          type=\"button\"\n          name=\"stopRecord\"\n          id=\"stopRecord\"\n          buttonSize=\"btn--medium\"\n          buttonStyle=\"btn--danger--outline\"\n        >\n          Stop record\n        </Button>\n\n        <Button\n          onClick={playRunButton}\n          type=\"button\"\n          name=\"playRunButton\"\n          id=\"playRunButton\"\n          buttonSize=\"btn--medium\"\n          buttonStyle=\"btn--danger--outline\"\n        >\n          Play Run\n        </Button>\n        {/* Dont know why we use */}\n        <Input\n          name=\"puzCompleted\"\n          type=\"text\"\n          id=\"puzCompleted\"\n          className=\"input-space\"\n          onChange={this.handleChange}\n          value={this.state.puzCompleted}\n        ></Input>\n\n        <Button\n          type=\"button\"\n          name=\"puzCompletedBtn\"\n          id=\"puzCompletedBtn\"\n          buttonSize=\"btn--medium\"\n          buttonStyle=\"btn--danger--outline\"\n        >\n          Update PuzCompleted\n        </Button>\n\n        {/* Dont know why we use */}\n        <Input\n          name=\"cashUpdate\"\n          type=\"text\"\n          id=\"cashUpdate\"\n          className=\"input-space\"\n          onChange={this.handleChange}\n          value={this.state.cashUpdate}\n        ></Input>\n\n        <Button\n          type=\"button\"\n          name=\"cashUpdateBtn\"\n          id=\"cashUpdateBtn\"\n          buttonSize=\"btn--medium\"\n          buttonStyle=\"btn--danger--outline\"\n        >\n          Update Cash\n        </Button>\n        <input\n          onClick={zindexChanged}\n          type=\"checkbox\"\n          id=\"zindex\"\n          name=\"zindex\"\n          defaultChecked={true}\n        />\n        <label htmlFor=\"male\">Zindex Filter</label>\n      </nav>\n    )\n  }\n}\n\nexport default Options\n","import React, { Component } from \"react\"\nimport \"./Mobile.css\"\n// import GetDiv from \"./GetDiv\"\nconst IP_ADDRESS_PG = \"ws://192.168.0.120:\"\nconst PORT = 7681\nconst URL = IP_ADDRESS_PG + PORT\nvar qaLogsButton = 1\nvar getExperimentsButton = 0\nclass Mobile extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      ws: null,\n      flag: true,\n      logs: \"\"\n    }\n  }\n\n  componentDidMount() {\n    this.connect()\n  }\n  timeout = 250\n\n  connect = () => {\n    var ws = new WebSocket(URL)\n    let that = this // cache the this\n    var connectInterval\n    ws.onopen = () => {\n      console.log(\"connected websocket main component\")\n\n      this.setState({ ws: ws })\n      this.setState({ flag: true })\n\n      ws.send('{\"command\":\"qaLogs\"}')\n      that.timeout = 250 // reset timer to 250 on open of websocket connection\n      clearTimeout(connectInterval) // clear Interval on on open of websocket connection\n    }\n\n    ws.onclose = (e) => {\n      console.log(\n        `Socket is closed. Reconnect will be attempted in ${Math.min(\n          10000 / 1000,\n          (that.timeout + that.timeout) / 1000\n        )} second.`,\n        e.reason\n      )\n\n      that.timeout = that.timeout + that.timeout //increment retry interval\n      connectInterval = setTimeout(this.check, Math.min(10000, that.timeout)) //call check function after timeout\n    }\n\n    ws.onerror = (err) => {\n      console.error(\"Socket encountered error: \", err.message, \"Closing socket\")\n\n      ws.close()\n    }\n\n    ws.onmessage = (evt) => {\n      console.log(\"on message\")\n      if (qaLogsButton !== 0) {\n        var log = JSON.parse(evt.data)\n        var name_list = \"\"\n        var elementType = []\n        // var zindexChoice = document.getElementById(\"zindex\").checked\n        var zindexChoice = 0\n        var filterZIndex = this.getFullScreenElementZIndex(log)\n        var FTUE_Z_ORDER = 75\n        var output = document.getElementById(\"output\")\n\n        for (var i = 0; i < log.length; i++) {\n          if (log[i][\"zindex\"] < FTUE_Z_ORDER && zindexChoice) {\n            continue\n          }\n          if (log[i][\"zindex\"] >= FTUE_Z_ORDER && !zindexChoice) {\n            continue\n          }\n\n          if (log[i][\"elementType\"] !== \"ScrollView\") {\n            output.innerHTML +=\n              '<div id=\"element\" onclick=\"this.clicked\" class=\"elements\" onmouseover=\"this.showcontent\" onmouseout=\"this.hidecontent\" value=\"' +\n              JSON.stringify(log[i]).replace(/\\\"/g, \"'\") +\n              '\" data_type=\"' +\n              log[i][\"elementType\"] +\n              '\" name=\"' +\n              log[i][\"name\"] +\n              '\" style=\"z-index:0;position: absolute;border:solid grey 1px;width:' +\n              log[i][\"boundbox\"][\"width\"] +\n              \"px; height:\" +\n              log[i][\"boundbox\"][\"height\"] +\n              \"px;left:\" +\n              log[i][\"boundbox\"][\"x\"] +\n              \"px;top:\" +\n              log[i][\"boundbox\"][\"y\"] +\n              'px;\"></div>'\n          }\n          if (!elementType.includes(log[i][\"elementType\"])) {\n            elementType.push(log[i][\"elementType\"])\n          }\n        }\n        var elementTypeButtons = \"\"\n        for (var k = 0; k < elementType.length; k++) {\n          elementTypeButtons +=\n            \"<input type='checkbox' onclick='elementTypeFilter(this);'name='elementTypeButtons' value='\" +\n            elementType[k] +\n            \"'checked>\" +\n            elementType[k] +\n            \"<br>\"\n        }\n        elementTypeButtons = \"<div>\" + elementTypeButtons + \"</div>\"\n        output.innerHTML =\n          \"<div id='screen' style='float:left;margin-left:auto;zoom:0.3;position:relative;width:720px;height:1364px;background:black;opacity:0.7'>\" +\n          output.innerHTML +\n          \"</div>\" +\n          \"<div id='idname' style='height:150px;width:600px;float:left'></div>\" +\n          elementTypeButtons\n        //addMessage( evt.data );\n        qaLogsButton = 0\n      } else if (getExperimentsButton !== 0) {\n        var exp = JSON.parse(evt.data)[\"arr\"]\n        var exp_ui = \"\"\n        for (var i = 0; i < exp.length; i++) {\n          exp_ui +=\n            \"<select onchange='updateExperiment(this)' id='\" +\n            exp[i][\"expName\"] +\n            \"'>\"\n          var exp_var_ui = \"\"\n          for (k = 0; k < exp[i][\"variant\"].length; k++) {\n            var exp_name = exp[i][\"variant\"][k][\"name\"]\n            if (exp[i][\"chosenVariant\"] === exp_name) {\n              exp_var_ui +=\n                \"<option value='\" +\n                exp[i][\"variant\"][k][\"name\"] +\n                \"'selected>\" +\n                exp[i][\"expName\"] +\n                \"-\" +\n                exp[i][\"variant\"][k][\"name\"] +\n                \"</option>\"\n            } else {\n              exp_var_ui +=\n                \"<option value='\" +\n                exp[i][\"variant\"][k][\"name\"] +\n                \"'>\" +\n                exp[i][\"expName\"] +\n                \"-\" +\n                exp[i][\"variant\"][k][\"name\"] +\n                \"</option>\"\n            }\n          }\n          exp_ui += exp_var_ui\n          exp_ui += \"</select></div>\"\n        }\n        document.getElementById(\"exp\").innerHTML = exp_ui\n        getExperimentsButton = 0\n      } else {\n        this.addMessage(evt.data)\n      }\n      console.log(\"*&*&*&*&*&*&*&\")\n      console.log(evt.data)\n    }\n  }\n\n  addMessage = (msg) => {\n    var output = document.getElementById(\"output\")\n    console.log(msg)\n    output.innerHTML += msg + \"<br/>\"\n  }\n\n  getFullScreenElementZIndex = (log) => {\n    console.log(\"get Full screen ElementZindex is called\")\n    for (var i = 0; i < log.length; i++) {\n      if (log[i][\"boundbox\"][\"height\"] >= 1920) {\n        return log[i][\"zindex\"]\n      }\n    }\n  }\n\n  showcontent = () => {\n    console.log(\"showContent is called\")\n    // console.log(c)\n    // console.log(c)\n    // c.style.background = \"lightgrey\"\n    // c.style.border = \"dotted 1px Blue\"\n    // //c.style.zIndex = -2;\n    // var contentpretty = this.syntaxHighlight(\n    //   c.getAttribute(\"value\").replace(\"/'/g\", '\"')\n    // )\n    // document.getElementById(\"idname\").innerHTML = contentpretty\n    // console.log(contentpretty)\n  }\n\n  hidecontent = (c) => {\n    console.log(\"hidecontent is called\")\n    console.log(c)\n    // c.style.background = null\n    // c.style.border = \"solid 1px grey\"\n    // //c.style.zIndex = -1;\n    // document.getElementById(\"idname\").innerHTML = \"\"\n  }\n\n  syntaxHighlight = (json) => {\n    console.log(\"syntaxHighlight is called\")\n    json = json\n      .replace(/&/g, \"&amp;\")\n      .replace(/</g, \"&lt;\")\n      .replace(/>/g, \"&gt;\")\n    return json.replace(\n      /(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g,\n      function (match) {\n        var cls = \"number\"\n        if (/^\"/.test(match)) {\n          if (/:$/.test(match)) {\n            cls = \"key\"\n          } else {\n            cls = \"string\"\n          }\n        } else if (/true|false/.test(match)) {\n          cls = \"boolean\"\n        } else if (/null/.test(match)) {\n          cls = \"null\"\n        }\n        return '<span class=\"' + cls + '\">' + match + \"</span>\"\n      }\n    )\n  }\n\n  check = () => {\n    const { ws } = this.state.ws\n    if (!ws || ws.readyState === WebSocket.CLOSED) this.connect() //check if websocket instance is closed, if so call `connect` function.\n  }\n\n  getFullScreenElementZIndex = (log) => {\n    for (var i = 0; i < log.length; i++) {\n      if (log[i][\"boundbox\"][\"height\"] >= 1920) {\n        return log[i][\"zindex\"]\n      }\n    }\n  }\n\n  qaLogs = (event) => {\n    console.log(\"Yrs\")\n    console.log(this.state.flag)\n    if (this.state.flag) {\n      this.ws.send('{\"command\":\"qaLogs\"}')\n      console.log(\"&&&&&&\")\n    }\n    event.preventDefault()\n  }\n\n  click = (ele) => {\n    console.log(ele.getAttribute(\"name\"))\n  }\n\n  clicked = (ele) => {\n    console.log(\"clicked\")\n    // TODO add the path to tap sprite\n  }\n\n  get_magic_logs() {\n    // TODO add the path to call the magic logs\n    console.log(\"magic Logs\")\n  }\n\n  elementTypeFilter = (et) => {\n    console.log(et.checked)\n    var value = et.getAttribute(\"value\")\n    var alldiv = document.getElementsByClassName(\"elements\")\n\n    for (var a = 0; a < alldiv.length; a++) {\n      if (et.checked) {\n        if (alldiv[a].getAttribute(\"data_type\") === value) {\n          alldiv[a].style.display = \"block\"\n        }\n      } else {\n        if (alldiv[a].getAttribute(\"data_type\") === value) {\n          alldiv[a].style.display = \"none\"\n        }\n      }\n    }\n  }\n\n  render() {\n    // const {data} = this.state.log\n    // const nameList = data.map(item=>{\n    //   return(\n    //     <div id = \"element\" onClick={this.clicked} className=\"elemnts\" onMouseOver={this.showcontent}\n    //     onMouseOut = {this.hidecontent} value\n\n    //     >\n\n    //     </div>\n    //   )\n    // })\n\n    return (\n      <div>\n        {/* <form onSubmit={this.qaLogs}>\n          <button type=\"submit\" onSubmit={this.qaLogs}>\n            click\n          </button>\n        </form> */}\n\n        <div id=\"output\" style={{ marginTop: \"15%\", float: \"left\" }}></div>\n      </div>\n    )\n  }\n}\n\nexport default Mobile\n","import React, { Component } from \"react\"\nimport { ProductConsumer } from \"./Context\"\n\nvar v = {\n  screen: <span class=\"number\">2</span>,\n  xPos: <span class=\"number\">477.5</span>,\n  yPos: <span class=\"number\">47.5</span>,\n  preY: <span class=\"number\">2825</span>,\n  visible: <span class=\"boolean\">true</span>,\n  anchorX: <span class=\"number\">0.5</span>,\n  anchorY: <span class=\"number\">0.5</span>,\n  elementType: \"Sprite\",\n  scale: {\n    x: <span class=\"number\">1.5075000524520874</span>,\n    y: <span class=\"number\">1.5075000524520874</span>\n  },\n  element: { spriteName: \"#hud_coin_bg.png\" },\n  boundbox: {\n    x: <span class=\"number\">376.49749755859375</span>,\n    y: <span class=\"number\">16.59625244140625</span>,\n    width: <span class=\"number\">202.0050048828125</span>,\n    height: <span class=\"number\">61.8074951171875</span>\n  },\n  zindex: <span class=\"number\">16</span>,\n  layerType: \"normal\",\n  name:\n    'puzzle_Sprite_<span class=\"number\">477</span>_<span class=\"number\">47</span>'\n}\n\nexport default class Dummy extends Component {\n  render() {\n    console.log(this.props)\n    return { v }\n  }\n}\n","import React from \"react\"\nimport { NotificationContainer, NotificationManager } from \"react-notifications\"\n\nclass Example extends React.Component {\n  createNotification = (type) => {\n    console.log(\"In notificatuons\")\n    console.log(type)\n    return () => {\n      switch (type) {\n        case \"info\":\n          NotificationManager.info(\"Info message\")\n          break\n        case \"success\":\n          NotificationManager.success(\"Success message\", \"Title here\")\n          break\n        case \"warning\":\n          NotificationManager.warning(\n            \"Warning message\",\n            \"Close after 3000ms\",\n            3000\n          )\n          break\n        case \"error\":\n          NotificationManager.error(\"Error message\", \"Click me!\", 5000, () => {\n            alert(\"callback\")\n          })\n          break\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n         <button\n          className=\"btn btn-info\"\n          onClick={this.createNotification(\"info\")}\n        >\n          Info\n        </button>\n        {/*<hr />\n        <button\n          className=\"btn btn-success\"\n          onClick={this.createNotification(\"success\")}\n        >\n          Success\n        </button>\n        <hr />\n        <button\n          className=\"btn btn-warning\"\n          onClick={this.createNotification(\"warning\")}\n        >\n          Warning\n        </button>\n        <hr />\n        <button\n          className=\"btn btn-danger\"\n          onClick={this.createNotification(\"error\")}\n        >\n          Error\n        </button> */}\n\n        {this.createNotification(\"sucess\")}\n\n        <NotificationContainer />\n      </div>\n    )\n  }\n}\n\nexport default Example\n\n// import React from \"react\"\n// import { NotificationContainer, NotificationManager } from \"react-notifications\"\n// var msg = \"\"\n// class Notification extends React.Component {\n//   createNotification = (type) => {\n//     return () => {\n//       switch (type) {\n//         case \"info\":\n//           NotificationManager.info(\"hell\")\n//           break\n//         case \"success\":\n//           NotificationManager.success(\"Success message\", msg)\n//           break\n//         case \"warning\":\n//           NotificationManager.warning(\"hell\", \"Close after 3000ms\", 3000)\n//           break\n//         case \"error\":\n//           NotificationManager.error(\"Error message\", \"hell\", 5000, () => {\n//             alert(\"callback\")\n//           })\n//           break\n//       }\n//     }\n//   }\n\n//   render() {\n//     const { msg1, type } = this.props\n//     msg = msg1\n//     return (\n//       //       <div>\n//       //         <button onClick={this.createNotification({ type})}>\n//       //           Click me\n//       //         </button>\n//       //         <button\n//       //           className=\"btn btn-info\"\n//       //           onClick={this.createNotification(\"info\")}\n//       //         >\n//       //           Info\n//       //         </button>\n\n//       //         <NotificationContainer />\n//       //       </div>\n//       <div>\n//         <button\n//           className=\"btn btn-info\"\n//           onClick={this.createNotification(\"info\")}\n//         >\n//           Info\n//         </button>\n//         <hr />\n//         <button\n//           className=\"btn btn-success\"\n//           onClick={this.createNotification(\"success\")}\n//         >\n//           Success\n//         </button>\n//         <hr />\n//         <button\n//           className=\"btn btn-warning\"\n//           onClick={this.createNotification(\"warning\")}\n//         >\n//           Warning\n//         </button>\n//         <hr />\n//         <button\n//           className=\"btn btn-danger\"\n//           onClick={this.createNotification(\"error\")}\n//         >\n//           Error\n//         </button>\n\n//         <NotificationContainer />\n//       </div>\n//     )\n//     return null\n//   }\n// }\n\n// export default Notification\n\n// import React from \"react\"\n// import ReactNotifications from \"react-notifications-component\"\n// import { store } from \"react-notifications-component\"\n// import \"animate.css\"\n\n// import \"react-notifications-component/dist.theme.css\"\n// import { Container } from \"react-bootstrap\"\n\n// function App() {\n//   return (\n//     <div className=\"container\">\n//       <h1>ReactNotifications</h1>\n//       <ReactNotifications></ReactNotifications>\n//     </div>\n//   )\n// }\n\n// function Home() {\n//   const handle = () => {\n//     store.addNotification({\n//       content: Mynotify,\n//       title: \"New card added\",\n//       message: \"hello\",\n//       type: \"sucess\",\n//       Container: \"top-right\",\n//       insert: \"top\",\n\n//       animationIn: [\"animated\", \"fadeIn\"],\n//       animationOut: [\"animated\", \"fadeout\"],\n//       dismiss: {\n//         duration: 2000,\n//         showIcon: true\n//       },\n//       width: 600\n//     })\n//   }\n//   return (\n//     <div>\n//       <button onClick={handle}>hello</button>\n//     </div>\n//   )\n// }\n\n// function Mynotify() {\n//   return (\n//     <div>\n//       <h1>someMessage</h1>\n//       <h1>Some message</h1>\n//     </div>\n//   )\n// }\n","import React, { Component } from \"react\"\nimport { InformationProvider, ProductConsumer } from \"../../Context\"\n\nclass GetDiv extends Component {\n  render() {\n    const {\n      value,\n      FTUE_Z_ORDER,\n      qaLogs,\n      elementType,\n      clicked,\n      showContent,\n      hideContent,\n      getExperimentsButton,\n      updateExperiment,\n      id,\n      exp_logs,\n      addMessage\n    } = this.props\n\n    var zindexChoice = document.getElementById(\"zindex\").checked\n\n    if (value[\"zindex\"] < FTUE_Z_ORDER && zindexChoice) {\n      return null\n    }\n    if (value[\"zindex\"] >= FTUE_Z_ORDER && !zindexChoice) {\n      return null\n    }\n    if (!elementType.includes(value[\"elementType\"])) {\n      elementType.push(value[\"elementType\"])\n    }\n    if (value[\"elementType\"] !== \"ScrollView\" && getExperimentsButton == 0) {\n      return (\n        <div\n          id=\"element\"\n          onClick={clicked}\n          className=\"elements\"\n          onMouseOver={showContent}\n          onMouseOut={hideContent}\n          value={JSON.stringify(value).replace(/\\\"/g, \"'\")}\n          datatype={value[\"elementType\"]}\n          name={value[\"name\"]}\n          style={{\n            zIndex: 0,\n            position: \"absolute\",\n            border: \"solid grey 1px\",\n            height: value[\"boundbox\"][\"height\"] + \"px\",\n            width: value[\"boundbox\"][\"width\"] + \"px\",\n            left: value[\"boundbox\"][\"x\"] + \"px\",\n            top: value[\"boundbox\"][\"y\"] + \"px\"\n          }}\n        ></div>\n      )\n    } else if (getExperimentsButton !== 0 && exp_logs.length) {\n      var exp_var_ui = \"\"\n      const items = []\n      for (var k = 0; k < value[\"variant\"].length; k++) {\n        var exp_name = value[\"variant\"][k][\"name\"]\n        if (value[\"chosenVarinat\"] === exp_name) {\n          items.push(\n            <option value={value[\"variant\"][k][\"name\"]} selected>\n              {value[\"expName\"] + \"-\" + value[\"variant\"][k][\"name\"]}\n            </option>\n          )\n        } else {\n          items.push(\n            <option value={value[\"variant\"][k][\"name\"]}>\n              {value[\"expName\"] + \"-\" + value[\"variant\"][k][\"name\"]}\n            </option>\n          )\n        }\n      }\n\n      return (\n        <select\n          style={{\n            display: \"block\",\n            width: \"700px\",\n            height: \"80px\",\n            marginTop: \"10px\",\n            marginBottom: \"5px\",\n            fontSize: \"40px\"\n          }}\n          onChange={updateExperiment}\n          id={value[\"expName\"]}\n        >\n          {items.map((va) => {\n            return va\n          })}\n        </select>\n      )\n    } else {\n      return <p>Hello</p>\n    }\n  }\n}\nexport default GetDiv\n\n// import React, { Component } from \"react\"\n\n// const GetDiv = ({\n//   id,\n//   onClick,\n//   className,\n//   onMouseOver,\n//   onMouseOut,\n//   value,\n//   data_types,\n//   name,\n//   zindex,\n//   position,\n//   width,\n//   height,\n//   left,\n//   top,\n//   ...props\n// }) => {\n//   const styles = {\n//     zIndex: \"0\",\n//     position: \"absolute\",\n//     border: \"solid grey 1px\",\n//     width: `${width}px`,\n//     height: `${height}px`,\n//     left: `${left}px`,\n//     top: `${top}px`\n//   }\n//   return (\n//     <div\n//       id={id}\n//       onClick={onClick}\n//       className={className}\n//       onMouseOver={onMouseOver}\n//       onMouseOut={onMouseOut}\n//       value={value}\n//       datatype={data_types}\n//       name={name}\n//       style={styles}\n//     ></div>\n//   )\n// }\n\n// export default GetDiv\n\n// ...this.state.logs,\n//           qaLogs: this.qaLogs,\n//           clicked: this.clicked,\n//           showcontent: this.showcontent,\n//          hidecontent: this.hidecontent\n","import React, { Component } from \"react\"\n\nclass GetCheckList extends Component {\n  render() {\n    const { elementType, elementTypeFilter } = this.props\n    return (\n      <>\n        <input\n          type=\"checkbox\"\n          onChange={elementTypeFilter}\n          name=\"elementTypeButtons\"\n          value={elementType}\n          defaultChecked={true}\n        />\n        {elementType}\n        <br></br>\n        {/* <p>hello</p> */}\n      </>\n    )\n  }\n}\n\nexport default GetCheckList\n","import React, { Component } from \"react\"\nimport Toolbar from \"./components/Toolbar/Toolbar\"\nimport SideDrawer from \"./components/SideDrawer/SideDrawer\"\nimport BackDrop from \"./components/Backdrop/BackDrop\"\nimport Options from \"./components/Options/Options\"\nimport Mobile from \"./components/Mobile/Mobile\"\nimport Notification from \"./components/Popups/Notification\"\nimport { InformationProvider, ProductConsumer } from \"./Context\"\nimport Dummy from \"./Dummy\"\nimport GetDiv from \"./components/Mobile/GetDiv\"\nimport ModalComponent from \"./components/Popups/Popup\"\nimport \"./App.css\"\nimport GetCheckList from \"./components/Mobile/GetCheckList\"\nimport Button from \"./components/Button/Button\"\nvar x = {\n  screen: <span class=\"number\">2</span>,\n  xPos: <span class=\"number\">477.5</span>,\n  yPos: <span class=\"number\">47.5</span>,\n  preY: <span class=\"number\">2825</span>,\n  visible: <span class=\"boolean\">true</span>,\n  anchorX: <span class=\"number\">0.5</span>,\n  anchorY: <span class=\"number\">0.5</span>,\n  elementType: \"Sprite\",\n  scale: {\n    x: <span class=\"number\">1.5075000524520874</span>,\n    y: <span class=\"number\">1.5075000524520874</span>\n  },\n  element: { spriteName: \"#hud_coin_bg.png\" },\n  boundbox: {\n    x: <span class=\"number\">376.49749755859375</span>,\n    y: <span class=\"number\">16.59625244140625</span>,\n    width: <span class=\"number\">202.0050048828125</span>,\n    height: <span class=\"number\">61.8074951171875</span>\n  },\n  zindex: <span class=\"number\">16</span>,\n  layerType: \"normal\",\n  name:\n    'puzzle_Sprite_<span class=\"number\">477</span>_<span class=\"number\">47</span>'\n}\n\nclass App extends Component {\n  state = {\n    sideDrawerOpen: false,\n    temp: [],\n    setModalShow: false\n  }\n\n  backdropClickHandler = () => {\n    this.setState({ sideDrawerOpen: false })\n  }\n  drawerToggleClickHandler = () => {\n    this.setState((prevState) => {\n      return {\n        sideDrawerOpen: !prevState.sideDrawerOpen\n      }\n    })\n  }\n  handle = () => {\n    console.log(this.state.setModalShow)\n    this.setState((prevState) => {\n      return {\n        setModalShow: !prevState.setModalShow\n      }\n    })\n    console.log(this.state.setModalShow)\n  }\n\n  handleclick = (e) => {\n    console.log(\"YHBHJBJHJ JHHJB\")\n    console.log(e)\n  }\n\n  trigger = () => {\n    this.foo.qa_logs()\n  }\n\n  render() {\n    // const [modalShow, setModalShow] = React.useState(false)\n    let backdrop\n\n    if (this.state.sideDrawerOpen) {\n      backdrop = <BackDrop click={this.backdropClickHandler} />\n    }\n    return (\n      <>\n        <InformationProvider>\n          <div style={{ height: \"100%\" }}>\n            <Toolbar drawerClickHandler={this.drawerToggleClickHandler} />\n            <SideDrawer show={this.state.sideDrawerOpen} />\n            {backdrop}\n          </div>\n          <div className=\"menu\" style={{ marginBottom: \"200px\" }}>\n            <ProductConsumer>\n              {(value) => {\n                return (\n                  <Options\n                    appium_status={value.appium_status}\n                    qaLogs={value.qaLogs.bind(this)}\n                    clearoutput={value.clearoutput.bind(this)}\n                    getExperiments={value.getExperiments.bind(this)}\n                    startAppium={value.startAppium.bind(this)}\n                    getAppiumStatus={value.getAppiumStatus.bind(this)}\n                    gameCommandList={value.gameCommandList.bind(this)}\n                    startRecord={value.startRecord.bind(this)}\n                    stopRecord={value.stopRecord.bind(this)}\n                    playRunButton={value.playRunButton.bind(this)}\n                    zindexChanged={value.zindexChanged.bind(this)}\n                  ></Options>\n                )\n              }}\n            </ProductConsumer>\n          </div>\n          {/* <div id=\"output\"></div> */}\n          <div\n            style={{\n              margin: \"0px 10px 30px 10px\",\n              alignItems: \"center\",\n              textAlign: \"center\",\n              textDecoration: \"underline\",\n              textTransform: \"capitalize\"\n            }}\n          >\n            <ProductConsumer>\n              {(value) => {\n                return Object.keys(value.gameCommandList_list).map((key, i) => {\n                  return (\n                    <Button\n                      onClick={value.executeGameCommand.bind(this)}\n                      type=\"button\"\n                      buttonSize=\"btn--medium\"\n                      buttonStyle=\"btn--black--border\"\n                      id={key}\n                    >\n                      {key}\n                    </Button>\n                  )\n                })\n              }}\n            </ProductConsumer>\n          </div>\n          <div\n            style={{\n              display: \"inline-block\",\n              marginLeft: \"0px\",\n              position: \"relative\",\n              height: \"1364px\",\n              width: \"900px\",\n              background: \"blue\",\n              opacity: 0.8,\n              zoom: \"0.4\"\n            }}\n          >\n            <div\n              style={{\n                marginLeft: \"60px\",\n                position: \"relative\",\n                height: \"1364px\",\n                width: \"720px\",\n                background: \"black\",\n                opacity: 0.9,\n                overflow: \"scroll\"\n              }}\n            >\n              <ProductConsumer>\n                {(value) => {\n                  if (value.value.length > 0)\n                    return value.value.map((val) => {\n                      return (\n                        <GetDiv\n                          value={val}\n                          exp_logs={value.exp_logs}\n                          FTUE_Z_ORDER={value.FTUE_Z_ORDER}\n                          zindexChoice={value.zindexChoice}\n                          getExperimentsButton={value.getExperimentsButton}\n                          elementType={value.elementType}\n                          qaLogs={value.qaLogs}\n                          clicked={value.clicked}\n                          showContent={value.showcontent.bind(this)}\n                          hideContent={value.hidecontent.bind(this)}\n                          updateExperiment={value.updateExperiment.bind(this)}\n                        ></GetDiv>\n                      )\n                    })\n                }}\n              </ProductConsumer>\n            </div>\n          </div>\n          <ProductConsumer>\n            {(v) => {\n              return (\n                <div\n                  style={{\n                    display: \"inline-block\",\n                    background: \"yellow\",\n                    height: \"1364px\",\n                    width: \"200vw\",\n                    marginLeft: \"400px\",\n                    zoom: \"0.3\"\n                  }}\n                >\n                  {Object.keys(v.contentpretty).map((key) => {\n                    const value = v.contentpretty[key]\n                    return value\n                  })}\n                </div>\n              )\n            }}\n          </ProductConsumer>\n          <div id=\"idname\"></div>\n          <div>\n            <ProductConsumer>\n              {(value) => {\n                return value.elementType.map((val) => {\n                  return (\n                    <GetCheckList\n                      elementType={val}\n                      elementTypeFilter={value.elementTypeFilter.bind(this)}\n                    ></GetCheckList>\n                  )\n                })\n              }}\n            </ProductConsumer>\n          </div>\n        </InformationProvider>\n      </>\n    )\n  }\n}\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"react-notifications-component/dist/theme.css\"\nimport \"react-notifications/lib/notifications.css\"\n// import \"react-notifications/dist/css/react-notifications.css\"\n// import \"react-notifications\"\n// import \"react-notifications/dist/react-notifications\"\n// import \"react-notifications-component/dist/react-notifications-components.js\"\nimport \"react-notifications/dist/react-notifications.js\"\n\n// import \"react-notifications/dist/fonts\"\n\n\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}