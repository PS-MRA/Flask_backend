{"version":3,"sources":["components/SideDrawer/DrawerToggleButton.js","components/Toolbar/Toolbar.js","components/SideDrawer/SideDrawer.js","components/Backdrop/BackDrop.js","components/Button/Button.js","components/Input/Input.js","Context.js","components/Options/Options.js","components/Mobile/Mobile.js","Dummy.js","components/Mobile/GetDiv.js","components/Mobile/GetCheckList.js","App.js","index.js"],"names":["DrawerToggleButton","props","className","onClick","click","Toolbar","drawerClickHandler","href","SideDrawer","drawerClasses","show","BackDrop","STYLES","SIZES","Button","children","type","buttonStyle","buttonSize","id","checkButtonStyle","includes","checkButtonSize","Input","name","placeholder","onChange","value","label","error","Fragment","htmlFor","defaultProps","ProductContext","React","createContext","temp","InformationProvider","timeout","connect","connectInterval","ws","WebSocket","IP_ADDRESS_PG","that","onopen","console","log","setState","flag","send","clearTimeout","onclose","e","Math","min","reason","setTimeout","check","onerror","err","message","close","onmessage","evt","JSON","parse","data","state","getExperimentsButton","exp_logs","logs","addMessage","msg","output","document","getElementById","innerHTML","getFullScreenElementZIndex","i","length","showcontent","c","target","style","background","border","zIndex","t_contentpretty","syntaxHighlight","getAttribute","replace","prevState","contentpretty","hidecontent","json","match","cls","test","readyState","CLOSED","qaLogs","event","ele","clicked","elementTypeFilter","et","checked","alldiv","getElementsByClassName","a","display","startRecord","recordName","getRecordName","playRunButton","playRun","rn","prompt","rc","alert","inputBtn","sendMessage","getAppiumStatus","getRequest","url","uriComponent","reqType","xmlHttp","XMLHttpRequest","uriComponentString","query","undefined","Object","keys","and_operator","forEach","key","encodeURIComponent","open","responseText","input","stopRecord","zindexChanged","startAppium","ret","appium_status","gameCommandList","response","jsonList","gameCommandHTML","buttonCount","get_magic_logs","gameCommandList_list","isShown","executeGameCommand","params","updateExperiment","exp","uri","clearoutput","getExperiments","FTUE_Z_ORDER","zindexChoice","elementType","elementTypeButton","bind","this","Provider","Component","ProductConsumer","Consumer","Options","cashUpdate","puzCompleted","clearOutput","handleChange","handler","qaLogsButton","v","screen","class","xPos","yPos","preY","visible","anchorX","anchorY","scale","x","y","element","spriteName","boundbox","width","height","zindex","layerType","GetDiv","showContent","hideContent","push","onMouseOver","onMouseOut","stringify","datatype","position","left","top","items","k","exp_name","selected","marginTop","marginBottom","fontSize","map","va","GetCheckList","App","sideDrawerOpen","backdropClickHandler","drawerToggleClickHandler","handleclick","trigger","foo","qa_logs","backdrop","margin","alignItems","textAlign","textDecoration","textTransform","marginLeft","opacity","zoom","overflow","val","ReactDOM","render"],"mappings":"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","file":"js/main.439088a4.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./DrawerToggleButton.css\"\nconst DrawerToggleButton = (props) => (\n  <button className=\"toogle-button\" onClick={props.click}>\n    <div className=\"toggle-button_line\" />\n    <div className=\"toggle-button_line\" />\n    <div className=\"toggle-button_line\" />\n  </button>\n)\n\nexport default DrawerToggleButton\n","import React from \"react\"\nimport \"./Toolbar.css\"\nimport DrawerToggleButton from \"../SideDrawer/DrawerToggleButton\"\nconst Toolbar = (props) => (\n  <header className=\"toolbar\">\n    <nav className=\"toolbar_navigation\">\n      <div>\n        <DrawerToggleButton click={props.drawerClickHandler} />\n      </div>\n      <div className=\"toolbar_logo\">\n        <a href=\"/\">The LOGO</a>\n      </div>\n      <div className=\"space\" />\n      <div className=\"toolbar_navigation_items\">\n        <ul>\n          <li>\n            <a href=\"/\">Products</a>\n          </li>\n          <li>\n            <a href=\"/\">Users</a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  </header>\n)\n\nexport default Toolbar\n","import React from \"react\"\nimport \"./SideDrawer.css\"\nconst SideDrawer = (props) => {\n  let drawerClasses = 'side-drawer'\n  if(props.show){\n    drawerClasses = 'side-drawer open'\n  }\n  return (\n    <nav className={drawerClasses}>\n      <ul>\n        <li>\n          <a href=\"/\">Products</a>\n        </li>\n        <li>\n          <a href=\"/\">User</a>\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default SideDrawer\n","import React from \"react\"\nimport \"./BackDrop.css\"\nconst BackDrop = (props) => <div className=\"backdrop\" onClick={props.click} />\n\nexport default BackDrop\n","import React from \"react\"\nimport \"./Button.css\"\n\nconst STYLES = [\n  \"btn--primary--solid\",\n  \"btn--warning--solid\",\n  \"btn--danger--solid\",\n  \"btn--success--solid\",\n  \"btn--primary--outline\",\n  \"btn--warning--outline\",\n  \"btn--danger--outline\",\n  \"btn--success--outline\",\n  \"btn--black--border\"\n]\n\nconst SIZES = [\"btn--medium\", \"btn--large\"]\n\nconst Button = ({ children, type, onClick, buttonStyle, buttonSize, id }) => {\n  const checkButtonStyle = STYLES.includes(buttonStyle)\n    ? buttonStyle\n    : STYLES[0]\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\n  return (\n    <button\n      className={`btn ${checkButtonStyle} ${checkButtonSize}`}\n      onClick={onClick}\n      id={id}\n      type={type}\n    >\n      {children}\n    </button>\n  )\n}\n\nexport default Button\n","import React from \"react\"\nimport \"./Input.css\"\n\nconst Input = ({\n  name,\n  type,\n  placeholder,\n  onChange,\n  className,\n  value,\n  error,\n  children,\n  label,\n  ...props\n}) => {\n  return (\n    <React.Fragment>\n      <label htmlFor={name}>{label}</label>\n      <input\n        id={name}\n        name={name}\n        type={type}\n        placeholder={placeholder}\n        onChange={onChange}\n        value={value}\n        className={className}\n      />\n    </React.Fragment>\n  )\n}\n\nInput.defaultProps = {\n  type: \"text\",\n  className: \"\",\n  value: \"\"\n}\n\nexport default Input\n","import React, { Component } from \"react\"\nconst ProductContext = React.createContext()\n\nconst IP_ADDRESS_PG = \"ws://192.168.43.188:\"\nconst PORT = 7681\nconst URL = IP_ADDRESS_PG + PORT\nvar qaLogsButton = 1\nvar temp = 0\n\nclass InformationProvider extends Component {\n  constructor() {\n    super()\n    this.state = {\n      ws: null,\n      flag: true,\n      recordName: \"\",\n      input: \"\",\n      FTUE_Z_ORDER: 1,\n      appium_status: \"Check Appium Connection\",\n      zindexChoice: 1,\n      elementType: [],\n      elementTypeButton: [],\n      getExperimentsButton: 0,\n      logs: [],\n      exp_logs: [],\n      contentpretty: {},\n      gameCommandList_list: {},\n      isShown: false\n    }\n    this.showcontent = this.showcontent.bind(this)\n    this.hidecontent = this.hidecontent.bind(this)\n  }\n\n  componentDidMount() {\n    this.connect()\n  }\n  timeout = 250\n\n  connect = () => {\n    var ws = new WebSocket(URL)\n    let that = this // cache the this\n    var connectInterval\n    ws.onopen = () => {\n      console.log(\"connected websocket main component\")\n\n      this.setState({ ws: ws })\n      this.setState({ flag: true })\n\n      ws.send('{\"command\":\"qaLogs\"}')\n      that.timeout = 250 // reset timer to 250 on open of websocket connection\n      clearTimeout(connectInterval) // clear Interval on on open of websocket connection\n    }\n\n    ws.onclose = (e) => {\n      console.log(\n        `Socket is closed. Reconnect will be attempted in ${Math.min(\n          10000 / 1000,\n          (that.timeout + that.timeout) / 1000\n        )} second.`,\n        e.reason\n      )\n\n      that.timeout = that.timeout + that.timeout //increment retry interval\n      connectInterval = setTimeout(this.check, Math.min(10000, that.timeout)) //call check function after timeout\n    }\n\n    ws.onerror = (err) => {\n      console.error(\"Socket encountered error: \", err.message, \"Closing socket\")\n\n      ws.close()\n    }\n    // TODO chnage the state only once\n    ws.onmessage = (evt) => {\n      var log = JSON.parse(evt.data)\n      console.log(\"Onmessgae\")\n      //      console.log(temp)\n      //      console.log(log)\n      console.log(this.state.getExperimentsButton)\n      if (temp == 1) {\n        log = JSON.parse(evt.data)[\"arr\"]\n        console.log(log)\n      }\n      console.log(\"******************\")\n      console.log(temp)\n      if (temp) {\n        this.setState({ exp_logs: log, logs: log, getExperimentsButton: 1 })\n      } else {\n        this.setState({ exp_logs: log, logs: log, getExperimentsButton: 0 })\n      }\n      temp = 0\n      // this.setState({ getExperimentsButton: 1 })\n    }\n  }\n\n  addMessage = (msg) => {\n    var output = document.getElementById(\"output\")\n    console.log(msg)\n    output.innerHTML += msg + \"<br/>\"\n  }\n\n  getFullScreenElementZIndex = (log) => {\n    console.log(\"get Full screen ElementZindex is called\")\n    for (var i = 0; i < log.length; i++) {\n      if (log[i][\"boundbox\"][\"height\"] >= 1920) {\n        return log[i][\"zindex\"]\n      }\n    }\n  }\n\n  showcontent = (c) => {\n    console.log(\"showContent is called\")\n    console.log(c.target)\n\n    c.target.style.background = \"lightgrey\"\n    c.target.style.border = \"dotted 1px Blue\"\n    c.target.style.zIndex = -2\n    var t_contentpretty = this.syntaxHighlight(\n      c.target.getAttribute(\"value\").replace(\"/'/g\", '\"')\n    )\n    this.setState((prevState) => ({\n      ...prevState,\n      contentpretty: t_contentpretty\n    }))\n    // document.getElementById(\"idname\").innerHTML = contentpretty\n    console.log(t_contentpretty)\n  }\n\n  hidecontent = (c) => {\n    console.log(\"hidecontent is called\")\n    console.log(c.target)\n    c.target.style.background = null\n    c.target.style.border = \"solid 1px grey\"\n    // //c.style.zIndex = -1;\n    // document.getElementById(\"idname\").innerHTML = \"\"\n  }\n\n  syntaxHighlight = (json) => {\n    console.log(\"syntaxHighlight is called\")\n    json = json\n      .replace(/&/g, \"&amp;\")\n      .replace(/</g, \"&lt;\")\n      .replace(/>/g, \"&gt;\")\n    return json.replace(\n      /(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g,\n      function (match) {\n        var cls = \"number\"\n        if (/^\"/.test(match)) {\n          if (/:$/.test(match)) {\n            cls = \"key\"\n          } else {\n            cls = \"string\"\n          }\n        } else if (/true|false/.test(match)) {\n          cls = \"boolean\"\n        } else if (/null/.test(match)) {\n          cls = \"null\"\n        }\n        return '<span class=\"' + cls + '\">' + match + \"</span>\"\n      }\n    )\n  }\n\n  check = () => {\n    const { ws } = this.state.ws\n    if (!ws || ws.readyState === WebSocket.CLOSED) this.connect() //check if websocket instance is closed, if so call `connect` function.\n  }\n\n  getFullScreenElementZIndex = (log) => {\n    for (var i = 0; i < log.length; i++) {\n      if (log[i][\"boundbox\"][\"height\"] >= 1920) {\n        return log[i][\"zindex\"]\n      }\n    }\n  }\n\n  qaLogs = (event) => {\n    console.log(\"Yrs\")\n    console.log(this.state.flag)\n    console.log(this.state.ws)\n    if (this.state.flag) {\n      this.state.ws.send('{\"command\":\"qaLogs\"}')\n      console.log(\"&&&&&&\")\n    }\n    // event.preventDefault()\n  }\n\n  click = (ele) => {\n    console.log(\"click is called\")\n    console.log(ele.getAttribute(\"name\"))\n  }\n\n  clicked = (ele) => {\n    console.log(\"clicked ghgh\")\n    console.log(ele.target)\n    // TODO add the path to tap sprite\n\n    /*\n    function clicked(ele){\n            console.log(\"clicked  is called\")\n                var url = \"action/tap_sprite\";\n                var uriComponent = {\"name\": ele.getAttribute('name')};\n                getRequest(url, uriComponent, true);\n                qaLogs();\n            }*/\n  }\n\n  get_magic_logs() {\n    // TODO add the path to call the magic logs\n    console.log(\"magic Logs\")\n    var url = \"action/get_magic_logs\"\n    var ret = this.getRequest(url, undefined, false)\n  }\n\n  elementTypeFilter = (et) => {\n    console.log(\"elemntTypeFilter\")\n    console.log(et.target)\n    console.log(et)\n    console.log(et.target.value)\n    console.log(et.target.checked)\n    var value = et.target.value\n    var alldiv = document.getElementsByClassName(\"elements\")\n    console.log(alldiv)\n    console.log(value)\n    console.log(et.value)\n    for (var a = 0; a < alldiv.length; a++) {\n      if (et.target.checked) {\n        if (alldiv[a].getAttribute(\"data_type\") === value) {\n          console.log(\"yes\")\n          alldiv[a].style.display = \"block\"\n        }\n      } else {\n        if (alldiv[a].getAttribute(\"data_type\") === value) {\n          console.log(\"no\")\n          alldiv[a].style.display = \"none\"\n        }\n      }\n    }\n  }\n\n  startRecord = (evt) => {\n    console.log(\"Start Record button is clicked\")\n    this.setState({\n      recordName: this.getRecordName()\n    })\n    if (this.state.recordName != \"\") {\n      console.log(`started recording $this.state.recordName`)\n    }\n    this.addMessage(\"Started Recordin with run name : \" + this.state.recordName)\n\n    this.state.ws.send('{\"command\":\"recordStart\"}')\n    // use this to start record from cocos code\n  }\n\n  playRunButton = (evt) => {\n    console.log(\"PlayRun button is called\")\n    var runName = this.playRun()\n  }\n\n  playRun = () => {\n    console.log(\"Playrun is called\")\n    var startRun = \"\"\n    let rn = prompt(\"Enter run name to starting playing:\")\n    let rc //=window.confirm(\"Confirm run name :\" + rn)\n    console.log(rn, rc)\n    if (rc == true && rn != \"\" && rn != undefined && rn != null) {\n      startRun = this.getRequest(\"action/play_run\", { name: rn }, false)\n      return rn\n    } else {\n      alert(\"Error in Appium Connection Please restart Appium.\")\n    }\n  }\n\n  inputBtn = (evt) => {\n    console.log(\"send message is called\")\n    this.sendMessage()\n  }\n\n  getRecordName = () => {\n    console.log(\"get RecorName is called\")\n    var startRun = \"\"\n    if (this.getAppiumStatus()) {\n      let rn = prompt(\"start Recording...Enter name for this run:\")\n      let rc //= ()=>(confirm(\"confirm record name :\" + rc))\n      console.log(rn, rc)\n      this.setState({\n        recordName: rc\n      })\n      if (rc == true && rn != \"\" && rn != undefined && rn != null) {\n        startRun = this.getRequest(\"action/start_record\", { name: rn }, true)\n        return rn\n      }\n    } else {\n      alert(\"Error in Appium Connection Please restart Appium.\")\n    }\n  }\n\n  getRequest = (url, uriComponent, reqType) => {\n    console.log(url)\n    console.log(uriComponent)\n    console.log(reqType)\n    console.log(\"Get request is called\")\n    var xmlHttp = new XMLHttpRequest()\n    console.log(xmlHttp)\n    var uriComponentString = \"\"\n    var query = \"\"\n    if (uriComponent != undefined) {\n      console.log(Object.keys(uriComponent).length)\n      if (Object.keys(uriComponent).length > 0) {\n        query = \"?\"\n      }\n\n      var and_operator = false\n      Object.keys(uriComponent).forEach(function (key) {\n        console.log(key + \" \" + uriComponent[key])\n        if (!and_operator) {\n          uriComponentString +=\n            key + \"=\" + encodeURIComponent('\"' + uriComponent[key] + '\"')\n          and_operator = true\n        } else {\n          uriComponentString +=\n            \"&\" + key + \"=\" + encodeURIComponent('\"' + uriComponent[key] + '\"')\n        }\n      })\n\n      console.log(url)\n      console.log(query)\n      console.log(uriComponentString)\n      console.log(reqType)\n      xmlHttp.open(\"GET\", url + query + uriComponentString, reqType) // false for synchronous request\n    } else {\n      console.log(url)\n      console.log(query)\n      console.log(uriComponentString)\n      console.log(reqType)\n      xmlHttp.open(\"GET\", url + query + uriComponentString, reqType) // false for synchronous request\n    }\n    console.log(\"Send\")\n    xmlHttp.send()\n    console.log(\"send\")\n    console.log(xmlHttp.responseText)\n    return xmlHttp.responseText\n  }\n\n  sendMessage = () => {\n    console.log(\"send message is called\")\n    console.log(this.state.input)\n    this.state.ws.send(this.state.input)\n    this.setState({\n      input: \"\"\n    })\n  }\n\n  playRunButton = () => {\n    console.log(\"playRun Button is called\")\n    var rn = this.playRun()\n    this.addMessage(`starting play run name : $rn`)\n  }\n\n  stopRecord = () => {\n    console.log(\"stop record is called\")\n    this.state.ws.send('{\"command\":\"recordStop\"}')\n  }\n\n  zindexChanged = (ele) => {\n    console.log(\"Zindexchnaged is called\")\n    this.qaLogs()\n  }\n\n  startAppium = () => {\n    console.log(\"start Appium is called\")\n    var url = \"start_appium\"\n    var ret = this.getRequest(url, undefined, false)\n    this.setState((prevState) => ({\n      ...prevState,\n      appium_status: \"Appium Connected\"\n    }))\n    return ret\n  }\n\n  getAppiumStatus = () => {\n    console.log(\"Get appium status is called\")\n    var url = \"get_appium_status\"\n    var ret = this.getRequest(url, undefined, false)\n    console.log(ret)\n    if (ret == \"true\") {\n      this.setState({\n        appium_status: \"Appium Connected\"\n      })\n    } else {\n      this.setState({\n        appium_status: \"Start Appium\"\n      })\n    }\n    return ret\n  }\n\n  //TODO add some fun in\n  gameCommandList = (evt) => {\n    console.log(\"Game command list is called\")\n    var url = \"action/get_command_list\"\n    var response = this.getRequest(url, undefined, false)\n    var jsonList = JSON.parse(JSON.parse(response))\n    console.log(jsonList)\n    var gameCommandHTML = \"\"\n    var buttonCount = 0\n    Object.keys(jsonList).forEach(function (key) {\n      buttonCount += 1\n      gameCommandHTML +=\n        \"<button onclick='executeGameCommand(this)' id=\" +\n        key +\n        \" type='button'>\" +\n        key +\n        \"</button>\"\n    })\n    if (buttonCount == 0) {\n      this.get_magic_logs()\n    }\n    this.setState((prevState) => ({\n      ...prevState,\n      gameCommandList_list: jsonList,\n      isShown: true\n    }))\n    console.log(this.state.gameCommandList_list)\n    //    document.getElementById(\"gamecommands\").innerHTML = gameCommandHTML\n    return gameCommandHTML\n  }\n\n  executeGameCommand = (ele) => {\n    console.log(\"execute game command is called\")\n    console.log(ele)\n    console.log(ele.target.id)\n    console.log(ele.id)\n    var name = ele.target.id\n    var url = \"action/\" + name\n    var uri = undefined\n    let params = prompt(\"Enter url params for this command\")\n    if (params == undefined || params == \"\") {\n      this.getRequest(url, uri, true)\n    } else {\n      this.getRequest(url + \"?\" + params, undefined, true)\n    }\n    this.qaLogs()\n  }\n\n  updateExperiment = (exp) => {\n    console.log(exp.target)\n    console.log(\"Update experiment is called\")\n    var name = exp.target.id\n    console.log(name)\n    var url = \"action/update_experiment\"\n    var uri = { name: name, value: exp.target.value }\n    this.getRequest(url, uri, false)\n    //var command = {\"command\":\"assignVariantForExperiment\",\n    //\"params\":{\"experimentName\": exp.id, \"variantName\": parseInt(exp.value)}};\n    //ws.send(JSON.stringify(command));\n  }\n\n  //TODO some missing\n  clearoutput = () => {\n    console.log(\"clear log is called\")\n  }\n\n  getExperiments = () => {\n    console.log(\"get Experiment is called\")\n    temp = 1\n    console.log(this.state.getExperimentsButton)\n    this.state.ws.send('{\"command\":\"experiments\"}')\n  }\n\n  render() {\n    //    console.log(\"In context\")\n    //    console.log(this.state.logs)\n    //    console.log(this.state.exp_logs)\n    //    console.log(this.state.getExperimentsButton)\n    return (\n      <ProductContext.Provider\n        value={{\n          exp_logs: this.state.exp_logs,\n          value: this.state.logs,\n          FTUE_Z_ORDER: this.state.FTUE_Z_ORDER,\n          zindexChoice: this.state.zindexChoice,\n          appium_status: this.state.appium_status,\n          elementType: [],\n          getExperimentsButton: this.state.getExperimentsButton,\n          qaLogs: this.qaLogs,\n          clicked: this.clicked,\n          showcontent: this.showcontent,\n          hidecontent: this.hidecontent,\n          elementTypeFilter: this.elementTypeFilter,\n          clearoutput: this.clearoutput,\n          getExperiments: this.getExperiments,\n          getAppiumStatus: this.getAppiumStatus,\n          startAppium: this.startAppium,\n          gameCommandList: this.gameCommandList,\n          startRecord: this.startRecord,\n          stopRecord: this.stopRecord,\n          playRunButton: this.playRunButton,\n          updateExperiment: this.updateExperiment,\n          contentpretty: this.state.contentpretty,\n          gameCommandList_list: this.state.gameCommandList_list,\n          executeGameCommand: this.executeGameCommand,\n          isShown: this.state.isShown\n        }}\n      >\n        {this.props.children}\n      </ProductContext.Provider>\n    )\n  }\n}\n\nconst ProductConsumer = ProductContext.Consumer\nexport { InformationProvider, ProductConsumer }\n\nexport default ProductContext\n// export { UserProvider, UserConsumer }\n","import React, { Component } from \"react\"\nimport Button from \"../Button/Button\"\nimport Input from \"../Input/Input\"\nimport \"./Options.css\"\nimport { ProductConsumer } from \"../../Context\"\n\nclass Options extends Component {\n  state = {\n    cashUpdate: \"\",\n    puzCompleted: \"\"\n  }\n  qaLogs = () => console.log(\"qaLogs\")\n  clearOutput = () => console.log(\"Clear\")\n  getExperiments = () => console.log(\"getExperiments\")\n  getAppiumStatus = () => console.log(\"Appium status\")\n  gameCommandList = () => console.log(\"Game command list\")\n\n  handleChange = (event) => {\n    console.log(event.target.name)\n    console.log(this.state.cashUpdate)\n    console.log(this.state.puzCompleted)\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n  \n  render() {\n    const {\n      qaLogs,\n      clearoutput,\n      getExperiments,\n      getAppiumStatus,\n      gameCommandList,\n      startRecord,\n      stopRecord,\n      playRunButton,\n      appium_status,\n      startAppium\n    } = this.props\n    var handler =\"\"\n    if (appium_status === \"Check Appium Connection\"){\n      handler = getAppiumStatus\n    }else{\n      handler = startAppium\n    }\n      return (\n        <nav className=\"options\">\n          <Button\n            onClick={qaLogs}\n            id=\"qaLogs\"\n            type=\"button\"\n            buttonSize=\"btn--medium\"\n            buttonStyle=\"btn--danger--outline\"\n          >\n            qaLogs\n          </Button>\n          <Button\n            onClick={clearoutput}\n            id=\"clear\"\n            type=\"button\"\n            buttonSize=\"btn--medium\"\n            buttonStyle=\"btn--danger--outline\"\n          >\n            Clear\n          </Button>\n          <Button\n            onClick={getExperiments}\n            id=\"getExperiments\"\n            type=\"button\"\n            buttonSize=\"btn--medium\"\n            buttonStyle=\"btn--danger--outline\"\n          >\n            Experiments\n          </Button>\n\n          <Button\n            onClick={handler}\n            id=\"getAppiumStatus\"\n            type=\"button\"\n            buttonSize=\"btn--medium\"\n            buttonStyle=\"btn--danger--outline\"\n          >\n            {appium_status}\n          </Button>\n\n          <Button\n            onClick={gameCommandList}\n            id=\"gameCommandList\"\n            type=\"button\"\n            buttonSize=\"btn--medium\"\n            buttonStyle=\"btn--danger--outline\"\n          >\n            Game commands\n          </Button>\n\n          <h1>Server Responses</h1>\n\n          {/* Server Response */}\n          <Button\n            onClick={startRecord}\n            type=\"button\"\n            name=\"startRecord\"\n            id=\"startRecord\"\n            buttonSize=\"btn--medium\"\n            buttonStyle=\"btn--danger--outline\"\n          >\n            Start Record\n          </Button>\n          <Button\n            onClick={stopRecord}\n            type=\"button\"\n            name=\"stopRecord\"\n            id=\"stopRecord\"\n            buttonSize=\"btn--medium\"\n            buttonStyle=\"btn--danger--outline\"\n          >\n            Stop record\n          </Button>\n\n          <Button\n            onClick={playRunButton}\n            type=\"button\"\n            name=\"playRunButton\"\n            id=\"playRunButton\"\n            buttonSize=\"btn--medium\"\n            buttonStyle=\"btn--danger--outline\"\n          >\n            Play Run\n          </Button>\n          {/* Dont know why we use */}\n          <Input\n            name=\"puzCompleted\"\n            type=\"text\"\n            id=\"puzCompleted\"\n            className=\"input-space\"\n            onChange={this.handleChange}\n            value={this.state.puzCompleted}\n          ></Input>\n\n          <Button\n            type=\"button\"\n            name=\"puzCompletedBtn\"\n            id=\"puzCompletedBtn\"\n            buttonSize=\"btn--medium\"\n            buttonStyle=\"btn--danger--outline\"\n          >\n            Update PuzCompleted\n          </Button>\n\n          {/* Dont know why we use */}\n          <Input\n            name=\"cashUpdate\"\n            type=\"text\"\n            id=\"cashUpdate\"\n            className=\"input-space\"\n            onChange={this.handleChange}\n            value={this.state.cashUpdate}\n          ></Input>\n\n          <Button\n            type=\"button\"\n            name=\"cashUpdateBtn\"\n            id=\"cashUpdateBtn\"\n            buttonSize=\"btn--medium\"\n            buttonStyle=\"btn--danger--outline\"\n          >\n            Update Cash\n          </Button>\n          <input\n            onClick={this.handleChange}\n            type=\"checkbox\"\n            id=\"zindex\"\n            name=\"zindex\"\n            checked\n          />\n          <label htmlFor=\"male\">Zindex Filter</label>\n        </nav>\n      )\n  }\n}\n\nexport default Options\n","import React, { Component } from \"react\"\nimport \"./Mobile.css\"\n// import GetDiv from \"./GetDiv\"\nconst IP_ADDRESS_PG = \"ws://192.168.0.120:\"\nconst PORT = 7681\nconst URL = IP_ADDRESS_PG + PORT\nvar qaLogsButton = 1\nvar getExperimentsButton = 0\nclass Mobile extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      ws: null,\n      flag: true,\n      logs: \"\"\n    }\n  }\n\n  componentDidMount() {\n    this.connect()\n  }\n  timeout = 250\n\n  connect = () => {\n    var ws = new WebSocket(URL)\n    let that = this // cache the this\n    var connectInterval\n    ws.onopen = () => {\n      console.log(\"connected websocket main component\")\n\n      this.setState({ ws: ws })\n      this.setState({ flag: true })\n\n      ws.send('{\"command\":\"qaLogs\"}')\n      that.timeout = 250 // reset timer to 250 on open of websocket connection\n      clearTimeout(connectInterval) // clear Interval on on open of websocket connection\n    }\n\n    ws.onclose = (e) => {\n      console.log(\n        `Socket is closed. Reconnect will be attempted in ${Math.min(\n          10000 / 1000,\n          (that.timeout + that.timeout) / 1000\n        )} second.`,\n        e.reason\n      )\n\n      that.timeout = that.timeout + that.timeout //increment retry interval\n      connectInterval = setTimeout(this.check, Math.min(10000, that.timeout)) //call check function after timeout\n    }\n\n    ws.onerror = (err) => {\n      console.error(\"Socket encountered error: \", err.message, \"Closing socket\")\n\n      ws.close()\n    }\n\n    ws.onmessage = (evt) => {\n      console.log(\"on message\")\n      if (qaLogsButton !== 0) {\n        var log = JSON.parse(evt.data)\n        var name_list = \"\"\n        var elementType = []\n        // var zindexChoice = document.getElementById(\"zindex\").checked\n        var zindexChoice = 0\n        var filterZIndex = this.getFullScreenElementZIndex(log)\n        var FTUE_Z_ORDER = 75\n        var output = document.getElementById(\"output\")\n\n        for (var i = 0; i < log.length; i++) {\n          if (log[i][\"zindex\"] < FTUE_Z_ORDER && zindexChoice) {\n            continue\n          }\n          if (log[i][\"zindex\"] >= FTUE_Z_ORDER && !zindexChoice) {\n            continue\n          }\n\n          if (log[i][\"elementType\"] !== \"ScrollView\") {\n            output.innerHTML +=\n              '<div id=\"element\" onclick=\"this.clicked\" class=\"elements\" onmouseover=\"this.showcontent\" onmouseout=\"this.hidecontent\" value=\"' +\n              JSON.stringify(log[i]).replace(/\\\"/g, \"'\") +\n              '\" data_type=\"' +\n              log[i][\"elementType\"] +\n              '\" name=\"' +\n              log[i][\"name\"] +\n              '\" style=\"z-index:0;position: absolute;border:solid grey 1px;width:' +\n              log[i][\"boundbox\"][\"width\"] +\n              \"px; height:\" +\n              log[i][\"boundbox\"][\"height\"] +\n              \"px;left:\" +\n              log[i][\"boundbox\"][\"x\"] +\n              \"px;top:\" +\n              log[i][\"boundbox\"][\"y\"] +\n              'px;\"></div>'\n          }\n          if (!elementType.includes(log[i][\"elementType\"])) {\n            elementType.push(log[i][\"elementType\"])\n          }\n        }\n        var elementTypeButtons = \"\"\n        for (var k = 0; k < elementType.length; k++) {\n          elementTypeButtons +=\n            \"<input type='checkbox' onclick='elementTypeFilter(this);'name='elementTypeButtons' value='\" +\n            elementType[k] +\n            \"'checked>\" +\n            elementType[k] +\n            \"<br>\"\n        }\n        elementTypeButtons = \"<div>\" + elementTypeButtons + \"</div>\"\n        output.innerHTML =\n          \"<div id='screen' style='float:left;margin-left:auto;zoom:0.3;position:relative;width:720px;height:1364px;background:black;opacity:0.7'>\" +\n          output.innerHTML +\n          \"</div>\" +\n          \"<div id='idname' style='height:150px;width:600px;float:left'></div>\" +\n          elementTypeButtons\n        //addMessage( evt.data );\n        qaLogsButton = 0\n      } else if (getExperimentsButton !== 0) {\n        var exp = JSON.parse(evt.data)[\"arr\"]\n        var exp_ui = \"\"\n        for (var i = 0; i < exp.length; i++) {\n          exp_ui +=\n            \"<select onchange='updateExperiment(this)' id='\" +\n            exp[i][\"expName\"] +\n            \"'>\"\n          var exp_var_ui = \"\"\n          for (k = 0; k < exp[i][\"variant\"].length; k++) {\n            var exp_name = exp[i][\"variant\"][k][\"name\"]\n            if (exp[i][\"chosenVariant\"] === exp_name) {\n              exp_var_ui +=\n                \"<option value='\" +\n                exp[i][\"variant\"][k][\"name\"] +\n                \"'selected>\" +\n                exp[i][\"expName\"] +\n                \"-\" +\n                exp[i][\"variant\"][k][\"name\"] +\n                \"</option>\"\n            } else {\n              exp_var_ui +=\n                \"<option value='\" +\n                exp[i][\"variant\"][k][\"name\"] +\n                \"'>\" +\n                exp[i][\"expName\"] +\n                \"-\" +\n                exp[i][\"variant\"][k][\"name\"] +\n                \"</option>\"\n            }\n          }\n          exp_ui += exp_var_ui\n          exp_ui += \"</select></div>\"\n        }\n        document.getElementById(\"exp\").innerHTML = exp_ui\n        getExperimentsButton = 0\n      } else {\n        this.addMessage(evt.data)\n      }\n      console.log(\"*&*&*&*&*&*&*&\")\n      console.log(evt.data)\n    }\n  }\n\n  addMessage = (msg) => {\n    var output = document.getElementById(\"output\")\n    console.log(msg)\n    output.innerHTML += msg + \"<br/>\"\n  }\n\n  getFullScreenElementZIndex = (log) => {\n    console.log(\"get Full screen ElementZindex is called\")\n    for (var i = 0; i < log.length; i++) {\n      if (log[i][\"boundbox\"][\"height\"] >= 1920) {\n        return log[i][\"zindex\"]\n      }\n    }\n  }\n\n  showcontent = () => {\n    console.log(\"showContent is called\")\n    // console.log(c)\n    // console.log(c)\n    // c.style.background = \"lightgrey\"\n    // c.style.border = \"dotted 1px Blue\"\n    // //c.style.zIndex = -2;\n    // var contentpretty = this.syntaxHighlight(\n    //   c.getAttribute(\"value\").replace(\"/'/g\", '\"')\n    // )\n    // document.getElementById(\"idname\").innerHTML = contentpretty\n    // console.log(contentpretty)\n  }\n\n  hidecontent = (c) => {\n    console.log(\"hidecontent is called\")\n    console.log(c)\n    // c.style.background = null\n    // c.style.border = \"solid 1px grey\"\n    // //c.style.zIndex = -1;\n    // document.getElementById(\"idname\").innerHTML = \"\"\n  }\n\n  syntaxHighlight = (json) => {\n    console.log(\"syntaxHighlight is called\")\n    json = json\n      .replace(/&/g, \"&amp;\")\n      .replace(/</g, \"&lt;\")\n      .replace(/>/g, \"&gt;\")\n    return json.replace(\n      /(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g,\n      function (match) {\n        var cls = \"number\"\n        if (/^\"/.test(match)) {\n          if (/:$/.test(match)) {\n            cls = \"key\"\n          } else {\n            cls = \"string\"\n          }\n        } else if (/true|false/.test(match)) {\n          cls = \"boolean\"\n        } else if (/null/.test(match)) {\n          cls = \"null\"\n        }\n        return '<span class=\"' + cls + '\">' + match + \"</span>\"\n      }\n    )\n  }\n\n  check = () => {\n    const { ws } = this.state.ws\n    if (!ws || ws.readyState === WebSocket.CLOSED) this.connect() //check if websocket instance is closed, if so call `connect` function.\n  }\n\n  getFullScreenElementZIndex = (log) => {\n    for (var i = 0; i < log.length; i++) {\n      if (log[i][\"boundbox\"][\"height\"] >= 1920) {\n        return log[i][\"zindex\"]\n      }\n    }\n  }\n\n  qaLogs = (event) => {\n    console.log(\"Yrs\")\n    console.log(this.state.flag)\n    if (this.state.flag) {\n      this.ws.send('{\"command\":\"qaLogs\"}')\n      console.log(\"&&&&&&\")\n    }\n    event.preventDefault()\n  }\n\n  click = (ele) => {\n    console.log(ele.getAttribute(\"name\"))\n  }\n\n  clicked = (ele) => {\n    console.log(\"clicked\")\n    // TODO add the path to tap sprite\n  }\n\n  get_magic_logs() {\n    // TODO add the path to call the magic logs\n    console.log(\"magic Logs\")\n  }\n\n  elementTypeFilter = (et) => {\n    console.log(et.checked)\n    var value = et.getAttribute(\"value\")\n    var alldiv = document.getElementsByClassName(\"elements\")\n\n    for (var a = 0; a < alldiv.length; a++) {\n      if (et.checked) {\n        if (alldiv[a].getAttribute(\"data_type\") === value) {\n          alldiv[a].style.display = \"block\"\n        }\n      } else {\n        if (alldiv[a].getAttribute(\"data_type\") === value) {\n          alldiv[a].style.display = \"none\"\n        }\n      }\n    }\n  }\n\n  render() {\n    // const {data} = this.state.log\n    // const nameList = data.map(item=>{\n    //   return(\n    //     <div id = \"element\" onClick={this.clicked} className=\"elemnts\" onMouseOver={this.showcontent}\n    //     onMouseOut = {this.hidecontent} value\n\n    //     >\n\n    //     </div>\n    //   )\n    // })\n\n    return (\n      <div>\n        {/* <form onSubmit={this.qaLogs}>\n          <button type=\"submit\" onSubmit={this.qaLogs}>\n            click\n          </button>\n        </form> */}\n\n        <div id=\"output\" style={{ marginTop: \"15%\", float: \"left\" }}></div>\n      </div>\n    )\n  }\n}\n\nexport default Mobile\n","import React, { Component } from \"react\"\nimport { ProductConsumer } from \"./Context\"\n\nvar v = {\n  screen: <span class=\"number\">2</span>,\n  xPos: <span class=\"number\">477.5</span>,\n  yPos: <span class=\"number\">47.5</span>,\n  preY: <span class=\"number\">2825</span>,\n  visible: <span class=\"boolean\">true</span>,\n  anchorX: <span class=\"number\">0.5</span>,\n  anchorY: <span class=\"number\">0.5</span>,\n  elementType: \"Sprite\",\n  scale: {\n    x: <span class=\"number\">1.5075000524520874</span>,\n    y: <span class=\"number\">1.5075000524520874</span>\n  },\n  element: { spriteName: \"#hud_coin_bg.png\" },\n  boundbox: {\n    x: <span class=\"number\">376.49749755859375</span>,\n    y: <span class=\"number\">16.59625244140625</span>,\n    width: <span class=\"number\">202.0050048828125</span>,\n    height: <span class=\"number\">61.8074951171875</span>\n  },\n  zindex: <span class=\"number\">16</span>,\n  layerType: \"normal\",\n  name:\n    'puzzle_Sprite_<span class=\"number\">477</span>_<span class=\"number\">47</span>'\n}\n\nexport default class Dummy extends Component {\n  render() {\n    console.log(this.props)\n    return { v }\n  }\n}\n","import React, { Component } from \"react\"\nimport { InformationProvider, ProductConsumer } from \"../../Context\"\n\nclass GetDiv extends Component {\n  render() {\n    const {\n      value,\n      FTUE_Z_ORDER,\n      zindexChoice,\n      qaLogs,\n      elementType,\n      clicked,\n      showContent,\n      hideContent,\n      getExperimentsButton,\n      updateExperiment,\n      id,\n      exp_logs,\n      addMessage\n    } = this.props\n\n//    console.log(\"&^&^&^&&^&\")\n//    console.log(getExperimentsButton)\n\n    if (value[\"zindex\"] < FTUE_Z_ORDER && zindexChoice) {\n      return\n    }\n    if (value[\"zindex\"] >= FTUE_Z_ORDER && !zindexChoice) {\n      return\n    }\n    if (!elementType.includes(value[\"elementType\"])) {\n//      console.log(\"OOOOOOOOOOO\")\n      elementType.push(value[\"elementType\"])\n//      console.log(elementType)\n    }\n    if (value[\"elementType\"] !== \"ScrollView\" && getExperimentsButton == 0) {\n      return (\n        <div\n          id=\"element\"\n          onClick={clicked}\n          className=\"elements\"\n          onMouseOver={showContent}\n          onMouseOut={hideContent}\n          value={JSON.stringify(value).replace(/\\\"/g, \"'\")}\n          datatype={value[\"elementType\"]}\n          name={value[\"name\"]}\n          style={{\n            zIndex: 0,\n            position: \"absolute\",\n            border: \"solid grey 1px\",\n            height: value[\"boundbox\"][\"height\"] + \"px\",\n            width: value[\"boundbox\"][\"width\"] + \"px\",\n            left: value[\"boundbox\"][\"x\"] + \"px\",\n            top: value[\"boundbox\"][\"y\"] + \"px\"\n          }}\n        ></div>\n      )\n    } else if (getExperimentsButton !== 0 && exp_logs.length) {\n      var exp_var_ui = \"\"\n      const items = []\n//      console.log(\"In get expppppppppp\")\n//      console.log(value[\"variant\"])\n      for (var k = 0; k < value[\"variant\"].length; k++) {\n        var exp_name = value[\"variant\"][k][\"name\"]\n        if (value[\"chosenVarinat\"] === exp_name) {\n          items.push(\n            <option value={value[\"variant\"][k][\"name\"]} selected>\n              {value[\"expName\"] + \"-\" + value[\"variant\"][k][\"name\"]}\n            </option>\n          )\n        } else {\n          items.push(\n            <option value={value[\"variant\"][k][\"name\"]}>\n              {value[\"expName\"] + \"-\" + value[\"variant\"][k][\"name\"]}\n            </option>\n          )\n        }\n      }\n\n      return (\n        <select\n          style={{\n            display: \"block\",\n            width: \"700px\",\n            height: \"80px\",\n            marginTop: \"10px\",\n            marginBottom: \"5px\",\n            fontSize:\"40px\"\n          }}\n          onChange={updateExperiment}\n          id={value[\"expName\"]}\n        >\n          {items.map((va) => {\n            return va\n          })}\n        </select>\n      )\n    } else {\n      //\n      return <p>Hello</p>\n    }\n  }\n}\nexport default GetDiv\n\n// import React, { Component } from \"react\"\n\n// const GetDiv = ({\n//   id,\n//   onClick,\n//   className,\n//   onMouseOver,\n//   onMouseOut,\n//   value,\n//   data_types,\n//   name,\n//   zindex,\n//   position,\n//   width,\n//   height,\n//   left,\n//   top,\n//   ...props\n// }) => {\n//   const styles = {\n//     zIndex: \"0\",\n//     position: \"absolute\",\n//     border: \"solid grey 1px\",\n//     width: `${width}px`,\n//     height: `${height}px`,\n//     left: `${left}px`,\n//     top: `${top}px`\n//   }\n//   return (\n//     <div\n//       id={id}\n//       onClick={onClick}\n//       className={className}\n//       onMouseOver={onMouseOver}\n//       onMouseOut={onMouseOut}\n//       value={value}\n//       datatype={data_types}\n//       name={name}\n//       style={styles}\n//     ></div>\n//   )\n// }\n\n// export default GetDiv\n\n// ...this.state.logs,\n//           qaLogs: this.qaLogs,\n//           clicked: this.clicked,\n//           showcontent: this.showcontent,\n//          hidecontent: this.hidecontent\n","import React, { Component } from \"react\"\n\nclass GetCheckList extends Component {\n  render() {\n    const { elementType, elementTypeFilter } = this.props\n    return (\n      <>\n        <input\n          type=\"checkbox\"\n          onChange={elementTypeFilter}\n          name=\"elementTypeButtons\"\n          value={elementType}\n          checked={true}\n        />\n        {elementType}\n        <br></br>\n        {/* <p>hello</p> */}\n      </>\n    )\n  }\n}\n\nexport default GetCheckList\n","import React, { Component } from \"react\"\nimport Toolbar from \"./components/Toolbar/Toolbar\"\nimport SideDrawer from \"./components/SideDrawer/SideDrawer\"\nimport BackDrop from \"./components/Backdrop/BackDrop\"\nimport Options from \"./components/Options/Options\"\nimport Mobile from \"./components/Mobile/Mobile\"\nimport { InformationProvider, ProductConsumer } from \"./Context\"\nimport Dummy from \"./Dummy\"\nimport GetDiv from \"./components/Mobile/GetDiv\"\nimport \"./App.css\"\nimport GetCheckList from \"./components/Mobile/GetCheckList\"\nimport Button from \"./components/Button/Button\"\nvar x = {\n  screen: <span class=\"number\">2</span>,\n  xPos: <span class=\"number\">477.5</span>,\n  yPos: <span class=\"number\">47.5</span>,\n  preY: <span class=\"number\">2825</span>,\n  visible: <span class=\"boolean\">true</span>,\n  anchorX: <span class=\"number\">0.5</span>,\n  anchorY: <span class=\"number\">0.5</span>,\n  elementType: \"Sprite\",\n  scale: {\n    x: <span class=\"number\">1.5075000524520874</span>,\n    y: <span class=\"number\">1.5075000524520874</span>\n  },\n  element: { spriteName: \"#hud_coin_bg.png\" },\n  boundbox: {\n    x: <span class=\"number\">376.49749755859375</span>,\n    y: <span class=\"number\">16.59625244140625</span>,\n    width: <span class=\"number\">202.0050048828125</span>,\n    height: <span class=\"number\">61.8074951171875</span>\n  },\n  zindex: <span class=\"number\">16</span>,\n  layerType: \"normal\",\n  name:\n    'puzzle_Sprite_<span class=\"number\">477</span>_<span class=\"number\">47</span>'\n}\n\nclass App extends Component {\n  state = {\n    sideDrawerOpen: false,\n    temp: []\n  }\n  backdropClickHandler = () => {\n    this.setState({ sideDrawerOpen: false })\n  }\n  drawerToggleClickHandler = () => {\n    this.setState((prevState) => {\n      return {\n        sideDrawerOpen: !prevState.sideDrawerOpen\n      }\n    })\n  }\n\n  handleclick = (e) => {\n    console.log(\"YHBHJBJHJ JHHJB\")\n    console.log(e)\n  }\n\n  trigger = () => {\n    this.foo.qa_logs()\n  }\n\n  render() {\n    let backdrop\n\n    if (this.state.sideDrawerOpen) {\n      backdrop = <BackDrop click={this.backdropClickHandler} />\n    }\n    return (\n      <>\n        <InformationProvider>\n          <div style={{ height: \"100%\" }}>\n            <Toolbar drawerClickHandler={this.drawerToggleClickHandler} />\n            <SideDrawer show={this.state.sideDrawerOpen} />\n            {backdrop}\n          </div>\n          <div className=\"menu\" style={{ marginBottom: \"200px\" }}>\n            <ProductConsumer>\n              {(value) => {\n                return (\n                  <Options\n                    appium_status={value.appium_status}\n                    qaLogs={value.qaLogs.bind(this)}\n                    clearoutput={value.clearoutput.bind(this)}\n                    getExperiments={value.getExperiments.bind(this)}\n                    startAppium={value.startAppium.bind(this)}\n                    getAppiumStatus={value.getAppiumStatus.bind(this)}\n                    gameCommandList={value.gameCommandList.bind(this)}\n                    startRecord={value.startRecord.bind(this)}\n                    stopRecord={value.stopRecord.bind(this)}\n                    playRunButton={value.playRunButton.bind(this)}\n                  ></Options>\n                )\n              }}\n            </ProductConsumer>\n          </div>\n          <div\n            style={{\n              margin: \"0px 10px 30px 10px\",\n              alignItems: \"center\",\n              textAlign: \"center\",\n              textDecoration: \"underline\",\n              textTransform: \"capitalize\"\n            }}\n          >\n            <ProductConsumer>\n              {(value) => {\n                console.log(value.gameCommandList_list)\n\n                return Object.keys(value.gameCommandList_list).map((key, i) => {\n                  console.log(key)\n                  return (\n                    <Button\n                      onClick={value.executeGameCommand.bind(this)}\n                      type=\"button\"\n                      buttonSize=\"btn--medium\"\n                      buttonStyle=\"btn--black--border\"\n                      id={key}\n                    >\n                      {key}\n                    </Button>\n                  )\n                })\n              }}\n            </ProductConsumer>\n          </div>\n          <div\n            style={{\n              display: \"inline-block\",\n              marginLeft: \"0px\",\n              position: \"relative\",\n              height: \"1364px\",\n              width: \"900px\",\n              background: \"blue\",\n              opacity: 0.8,\n              zoom: \"0.4\"\n            }}\n          >\n            <div\n              style={{\n                marginLeft: \"60px\",\n                position: \"relative\",\n                height: \"1364px\",\n                width: \"720px\",\n                background: \"black\",\n                opacity: 0.9,\n                overflow: \"scroll\"\n              }}\n            >\n              <ProductConsumer>\n                {(value) => {\n                  return value.value.map((val) => {\n                    console.log(\"In appp\")\n                    return (\n                      <GetDiv\n                        value={val}\n                        exp_logs={value.exp_logs}\n                        FTUE_Z_ORDER={value.FTUE_Z_ORDER}\n                        zindexChoice={value.zindexChoice}\n                        getExperimentsButton={value.getExperimentsButton}\n                        elementType={value.elementType}\n                        qaLogs={value.qaLogs}\n                        clicked={value.clicked}\n                        showContent={value.showcontent.bind(this)}\n                        hideContent={value.hidecontent.bind(this)}\n                        updateExperiment={value.updateExperiment.bind(this)}\n                      ></GetDiv>\n                    )\n                  })\n                }}\n              </ProductConsumer>\n            </div>\n          </div>\n          <ProductConsumer>\n            {(v) => {\n              return (\n                <div\n                  style={{\n                    display: \"inline-block\",\n                    background: \"yellow\",\n                    height: \"1364px\",\n                    width: \"200vw\",\n                    marginLeft: \"400px\",\n                    zoom: \"0.3\"\n                  }}\n                >\n                  {Object.keys(v.contentpretty).map((key) => {\n                    const value = v.contentpretty[key]\n                    return value\n                  })}\n                </div>\n              )\n            }}\n          </ProductConsumer>\n          <div>\n            <ProductConsumer>\n              {(value) => {\n                return value.elementType.map((val) => {\n                  return (\n                    <GetCheckList\n                      elementType={val}\n                      elementTypeFilter={value.elementTypeFilter.bind(this)}\n                    ></GetCheckList>\n                  )\n                })\n              }}\n            </ProductConsumer>\n          </div>\n        </InformationProvider>\n      </>\n    )\n  }\n}\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}